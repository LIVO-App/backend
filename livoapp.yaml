openapi: 3.0.0
info:
  version: '2.0.0'
  title: "LivoAPP API"
  description: API for managing school curriculum
servers:
  - url: http://localhost:5000/api
    description: Server to use the web service locally
tags:
  - name: v1
    description: Refers to the version 1 of that api
  - name: v2
    description: Refers to the version 2 of that api
  - name: learning sessions
    description: Everything about learning sessions
  - name: learning areas
    description: Everything about learning areas
  - name: courses
    description: Everything about courses
  - name: student
    description: Everything about students
  - name: teachers
    description: Everything about teachers
  - name: admin
    description: Everything about admin
  - name: project classes
    description: Everything about project classes
  - name: ordinary classes
    description: Everything about ordinary classes
  - name: authentication
    description: Authentication methods
  - name: announcements
    description: Announcement methods
  - name: propositions
    description: Course propositions methods
  - name: teachings
    description: Teachings methods
  - name: constraints
    description: Credit constraints methods
  - name: study addresses
    description: Study addresses methods
paths:
  /v1/learning_sessions:
    get:
      description: Get all the learning sessions in the system.
      parameters:
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_year_of'
        - $ref: '#/components/parameters/query_future_session'
      summary: View of all the learning sessions.
      tags:
        - learning sessions
        - v1
      responses:
        '200':
          description: "Collection of learning sessions."
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_session_data'
                    description: "Data return from the api"
    post:
      description: Insertion of learning session
      summary: Insertion of learning session
      tags:
        - learning sessions
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
      requestBody:
        description: Object to be inserted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_object_insertion'
      responses:
        '201':
          $ref: '#/components/responses/SessionInsertion'
        '400':
          $ref: '#/components/responses/SessionInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/SessionInsertion'
  /v1/learning_sessions/school_years:
    get:
      description: Get all the school years defined in the learning sessions in the system.
      summary: Collection of school years
      tags:
        - learning sessions
        - v1
      responses:
        '200':
          description: "Collection of school years"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    properties:
                      school_year:
                        type: integer
                        description: "School year"
                    description: "Data return from the api"
  /v1/learning_sessions/{session_id}:
    get:
      description: Get specific learning session from its ID.
      parameters:
        - $ref: '#/components/parameters/path_session_id'
        - $ref: '#/components/parameters/query_school_year'
      summary: View a specific learning session.
      tags:
        - learning sessions
        - v1
      responses:
        '200':
          description: "View of a single learning session."
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/learning_session_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Update the learning session specified by changing some data like starting and ending date or the max number of groups
      parameters:
        - $ref: '#/components/parameters/path_session_id'
        - $ref: '#/components/parameters/header_token'
      summary: Delete course
      tags:
        - project classes
        - v1
      requestBody:
        description: Data of final message
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_session_data'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
  /v1/learning_areas:
    get:
      description: Get all learning areas in the system.
      parameters:
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_all_data'
        - $ref: '#/components/parameters/query_credits'
      summary: View of all the learning areas.
      tags:
        - learning areas
        - v1
      responses:
        '200':
          description: "Collection of learning areas"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_area_data'
                    description: "Data return from the api"
  /v1/learning_areas/{area_id}:
    get:
      description: Get specific learning area from its id.
      parameters:
        - $ref: '#/components/parameters/path_area_id'
      summary: View a specific learning area
      tags:
        - learning areas
        - v1
      responses:
        '200':
          description: "View of a single learning area"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/learning_area_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses:
    get:
      description: Get all the courses in the system, with basic information and the eventual name provided for their project classes
      parameters:
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_area_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_alone'
      summary: View of all the courses
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_short'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/courses:
    get:
      description: Get all the courses in the system, with basic information and the eventual name provided for their project classes
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_area_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_alone'
      summary: View of all the courses
      tags:
        - courses
        - v2
      responses:
        '200':
          description: "Collection of courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_short'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}:
    get:
      description: Get a specific course from its id.
      parameters:
        - $ref: '#/components/parameters/path_course_id'
        - $ref: '#/components/parameters/query_admin_info'
      summary: View of a single course
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "View of a single course"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_complete'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Update the course and related infortations specified
      parameters:
        - $ref: '#/components/parameters/path_course_id'
        - $ref: '#/components/parameters/header_token'
      summary: Update course
      tags:
        - courses
        - v1
      requestBody:
        description: Data to be modified
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/course_update_data'
      responses:
        '200':
          $ref: '#/components/responses/CourseUpdate'
        '400':
          $ref: '#/components/responses/CourseUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
    delete:
      description: Delete the course in course_id
      parameters:
        - $ref: '#/components/parameters/path_course_id'
        - $ref: '#/components/parameters/header_token'
      summary: Delete course
      tags:
        - courses
        - v1
      responses:
        '200':
          $ref: '#/components/responses/AcceptDelete'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}/opento:
    get:
      description: Get all the classes that can see the course
      parameters:
        - $ref: '#/components/parameters/path_course_id'
      summary: Collection of classes for which the course can be seen
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of ordinary classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_classes_course_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}/teachings:
    get:
      description: Get all the teachings that are teach in the course
      parameters:
        - $ref: '#/components/parameters/path_course_id'
      summary: Collection of teaching of the course
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of teachings"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teaching_related_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}/growth_areas:
    get:
      description: Get all the growth areas that characterize the course
      parameters:
        - $ref: '#/components/parameters/path_course_id'
      summary: Collection of growth areas of the course
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of growth areas"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/growth_area_related_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/learning_contexts:
    get:
      description: Get all the learning contexts in the system
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Collection of learning contexts
      tags:
        - learning contexts
        - v1
      responses:
        '200':
          description: "Collection of learning contexts"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_context_data'
                    description: "Data return from the api"
  /v1/ordinary_classes:
    get:
      description: Get all the ordinary classes in the system.
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_school_year'
        #- $ref: '#/components/parameters/query_credits'
        - $ref: '#/components/parameters/query_descending'
      summary: Collection of ordinary classes
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Collection of ordinary classes "
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_class_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      description: Add new ordinary classes to the system
      parameters:
        - $ref: '#/components/parameters/header_token'
      summary: Add new ordinary class
      tags:
        - ordinary classes
        - v1
      requestBody:
        description: Array of ordinary classes
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/ordinary_classes_insert_data'
      responses:
        '201':
          $ref: '#/components/responses/OrdClassInsert'
        '400':
          $ref: '#/components/responses/OrdClassInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/OrdClassInsert'
  /v1/auth/student_login:
    post:
      description: Authentication for student
      summary: Student login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/student_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/teacher_login:
    post:
      description: Authentication for teacher
      summary: Teacher login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/teacher_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/admin_login:
    post:
      description: Authentication for admin
      summary: Admin login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/admin_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/google:
    get:
      description: Google authentication. It will redirect to the google authentication page.
      summary: Google authentication
      tags:
        - authentication
        - v1
      responses:
        '200':
          description: Redirect to Google authentication page.
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/students/{student_id}/curriculum:
    get:
      description: Get all the courses in the curriculum of a student for a certain school year.
      summary: Get student curriculum
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_school_year'
      responses:
        '200':
          description: "Student curriculum"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/curriculum_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/students/{student_id}/curriculum:
    get:
      description: |
        Get all the courses in the curriculum of a student for a certain school year. 
        If the user is a student, it will show all the courses he is subscribed in that school year. 
        If the user logged in is a teacher, the api will return only the courses related to the teacher:
          - the ones that he teaches in (his project classes)
          - the ones associated to him through his teachings
      summary: Get student curriculum
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          description: "Student curriculum"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/curriculum_data_v2'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/grades:
    get:
      description: Get all the grades of a student in a certain project class
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Get grades of a student for a course
      tags:
        - students
        - v1
      responses:
        '200':
          description: "Student grades"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/grade_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      description: Insert a grade for a specific user given a specific project class
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_ita_descr'
        - $ref: '#/components/parameters/query_eng_descr'
        - $ref: '#/components/parameters/query_grade'
        - $ref: '#/components/parameters/query_final'
      summary: Insertion of a student grade
      tags:
        - students
        - v1
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/students/{student_id}/grades:
    get:
      description: Get all the grades of a student in a certain project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Get grades of a student for a course
      tags:
        - students
        - v2
      responses:
        '200':
          description: "Student grades"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/grade_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/grades/{grade_id}:
    put:
      description: Update a specific grade information. If it is not final it can be updated until a final grade is inserted. If it is a final grade it can be updated until a week after its insertion.
      parameters:
        - $ref: '#/components/parameters/path_grade_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
      requestBody:
        description: Data of final message
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grade_update'
      summary: Update of a specific grade
      tags:
        - grades
        - v1
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      description: Deletion of a grade. If it is not final it can be deleted until a final grade is inserted. If it is a final grade it can be deleted until a week after its insertion.
      summary: Deletion of a grade
      tags:
        - grades
        - v1
      parameters:
        - $ref: '#/components/parameters/path_grade_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptDelete'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/subscribe:
    post:
      description: Subscription to a project class by a student
      summary: Subscription to a course
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v2/students/{student_id}/subscribe:
    post:
      description: Subscription to a project class by a student
      summary: Subscription to a course
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v1/students/{student_id}/unsubscribe:
    post:
      description: Delete of a subscription to a project class by a student
      summary: Delete a subscription to a course
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/students/{student_id}/unsubscribe:
    post:
      description: Delete of a subscription to a project class by a student
      summary: Delete a subscription to a course
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/confirmation:
    patch:
      description: | 
        This api is used to manage the confirmation of the subscription by the student. 
        If the outcome is negative, the subscription will be deleted and an eventual pending student will be enrolled in his place.
        If the outcome is positive, we have two possible scenarios:
          - If the student was not pending, all will remain the same
          - If the student was pending, if there are free slots, the student will be enrolled, otherwise it will remain in the pending list until someone will unsubscribe or not confirm his subscription.
      summary: Confirmation to a course
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_outcome'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachers/{teacher_id}/my_project_classes:
    get:
      description: Get all the project classes in which the teacher teaches in a certain learning session
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Get all teacher project classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
  /v2/teachers/{teacher_id}/my_project_classes:
    get:
      description: Get all the project classes in which the teacher teaches in a certain learning session
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_course_id'
      summary: Get all teacher project classes
      tags:
        - teachers
        - v2
      responses:
        '200':
          description: "Teacher project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/teachers/{teacher_id}/associated_project_classes:
    get:
      description: Get all the project classes in which the teacher is associated through its teachings
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Get all teacher associated project classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher associated project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/associated_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
  /v2/teachers/{teacher_id}/associated_project_classes:
    get:
      description: Get all the project classes in which the teacher is associated through its teachings
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_course_id'
      summary: Get all teacher associated project classes
      tags:
        - teachers
        - v2
      responses:
        '200':
          description: "Teacher associated project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/associated_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/teachers/{teacher_id}/my_ordinary_classes:
    get:
      description: Get all the ordinary classes in which the teacher is teaching in a specific school year
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_school_year'
      summary: Get all teacher ordinary classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher ordinary classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_ordinary_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/project_classes/:
    get:
      description: Get all project classes of the school
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_year'
      summary: Get project classes
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_classes_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/project_classes/{course}/{session}:
    get:
      description: Get specific project class of the school
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
      summary: Get project class
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project class"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/project_classes_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      description: Delete the project class specified if it is in a non current session and it has no grades yet
      parameters:
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
        - $ref: '#/components/parameters/header_token'
      summary: Delete course
      tags:
        - project classes
        - v1
      responses:
        '200':
          $ref: '#/components/responses/AcceptDelete'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
  /v1/project_classes/{course}/{session}/final_confirmation:
    put:
      description: Update the project class specified by setting the final confirmation field to true
      parameters:
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
        - $ref: '#/components/parameters/header_token'
      summary: Delete course
      tags:
        - project classes
        - v1
      requestBody:
        description: Data of final message
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/final_confirmation_data'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
  /v1/project_classes/{course}/{session}/components:
    get:
      description: Get all components of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_associated_class'
      summary: Get project classes components
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes components"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_class_component_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/ordinary_classes/{study_year}/{address}/components:
    get:
      description: Get all components of a specific ordinary class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_study_year'
        - $ref: '#/components/parameters/path_address'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_section'
      summary: Get ordinary classes components
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Ordinary classes components"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_class_component_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      description: Add new components of an ordinary class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_study_year'
        - $ref: '#/components/parameters/path_address'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_section'
      summary: Add new components to ordinary class
      tags:
        - ordinary classes
        - v1
      requestBody:
        description: Array of students
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                type: integer
                description: "Id of the students to be added to the class"
      responses:
        '201':
          $ref: '#/components/responses/OrdClassComponentsInsert'
        '400':
          $ref: '#/components/responses/OrdClassComponentsInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/OrdClassComponentsInsert'
  /v1/ordinary_classes/{study_year}/{address}/teachers:
    post:
      description: Add new teachers of an ordinary class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_study_year'
        - $ref: '#/components/parameters/path_address'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_section'
      summary: Add new teachers to ordinary class
      tags:
        - ordinary classes
        - v1
      requestBody:
        description: Array of teachers
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/teacher_ord_class_data'
      responses:
        '201':
          $ref: '#/components/responses/OrdClassTeachersInsert'
        '400':
          $ref: '#/components/responses/OrdClassTeachersInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/OrdClassTeachersInsert'
  /v1/ordinary_classes/{study_year}/{address}/non_compliant:
    get:
      description: Get all components of a specific ordinary class that does not satisfy the credit constraints for a certain learning session
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_study_year'
        - $ref: '#/components/parameters/path_address'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_section'
      summary: Get ordinary classes components non compliant to credit constraints
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Ordinary classes components non compliant with credits"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_class_non_compliant_component_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/learning_sessions/correspondence:
    post:
      parameters:
        - $ref: '#/components/parameters/query_student_id'
      summary: Search for learning sessions of a list of courses
      tags:
        - learning sessions
        - v1
      requestBody:
        description: Array of courses to search
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                type: string
      responses:
        '200':
          description: "Learning sessions with courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_sessions_courses_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
  /v1/learning_contexts/correspondence:
    post:
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Search for learning contexts of a list of courses
      tags:
        - learning contexts
        - v1
      requestBody:
        description: Array of courses to search
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                type: string
      responses:
        '200':
          description: "Learning contexts with courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_contexts_courses_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
  /v1/teachers/{teacher_id}/active_years:
    get:
      description: Get the years which the teacher was actively teaching in the school
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_full_class'
      summary: Get teacher active teaching years
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher's active years"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teacher_active_year_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachers/{teacher_id}:
    put:
      description: Update of information of the teacher
      summary: Update teacher information
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
      tags:
        - teachers
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_info_data'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachers/{teacher_id}/password:
    put:
      description: Update of password of the teacher
      summary: Update teacher password
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
      tags:
        - teachers
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              type: string
              description: "Password to be updated"
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/admins:
    post:
      description: Add new admins to the system
      parameters:
        - $ref: '#/components/parameters/header_token'
      summary: Add new admin
      tags:
        - admins
        - v1
      requestBody:
        description: Array of admin user
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/admin_data'
      responses:
        '201':
          $ref: '#/components/responses/AdminInsert'
        '400':
          $ref: '#/components/responses/AdminInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/AdminInsert'
  /v1/students:
    post:
      description: Add new students to the system
      parameters:
        - $ref: '#/components/parameters/header_token'
      summary: Add new student
      tags:
        - students
        - v1
      requestBody:
        description: Array of student user
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/student_insert_data'
      responses:
        '201':
          $ref: '#/components/responses/StudentInsert'
        '400':
          $ref: '#/components/responses/StudentInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/StudentInsert'
  /v1/admins/{admin_id}:
    put:
      description: Update of information of the admin
      summary: Update teacher information
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_admin_id'
      tags:
        - admins
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_info_data'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/admins/{admin_id}/password:
    put:
      description: Update of password of the admin
      summary: Update admin password
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_admin_id'
      tags:
        - admins
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              type: string
              description: "Password to be updated"
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'  
  /v1/project_classes/{course}/{session}/sections:
    get:
      description: Get all sections of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
      summary: Get project classes sections in a certain learning session
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes sections"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_class_section_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '404':
          $ref: '#/components/responses/NotFound'  
  /v1/project_classes/{course}/{session}/teachers:
    get:
      description: Get all teachers of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
      summary: Get project classes teachers in a certain learning session
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes sections"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_class_teachers_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '404':
          $ref: '#/components/responses/NotFound'  
  /v1/ordinary_classes/{student}/{session}:
    get:
      description: Get ordinary class of a student in a specific learning session
      parameters:
        - $ref: '#/components/parameters/path_student_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
      summary: Get ordinary class of a student in a learning session
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Student ordinary class"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    $ref: '#/components/schemas/student_ordinary_class_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/project_classes:
    get:
      description: Get project classes of a student in a specific learning session
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Get project classes of a student in a learning session
      tags:
        - students
        - v1
      responses:
        '200':
          description: "Student project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/student_project_classes_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/project_classes/{course}/{session}/announcements:
    get:
      description: Get all the announcements of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_session_id'
        - $ref: '#/components/parameters/query_publisher_id'
        - $ref: '#/components/parameters/query_is_admin'
      summary: Get project class announcements
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project class announcements"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_classes_announcements_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/announcements/{announcement_id}:
    get:
      description: Get specific announcement from its id
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_announcement_id'
      tags:
        - announcements
        - v1
      summary: Get specific announcement
      responses:
        '200':
          description: "Project class announcements"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/announcement_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/announcements:
    post:
      description: Publication of announcements for a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_publisher_id'
        - $ref: '#/components/parameters/query_is_admin'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
      summary: Publication of announcements
      tags:
        - announcements
        - v1
      requestBody:
        description: Data of the announcement
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcements_post_data'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/propositions:
    get:
      description: List of courses proposals
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_recent_models'
        - $ref: '#/components/parameters/query_not_confirmed'
      summary: List of courses proposals
      tags:
        - courses
        - propositions
        - v1
      responses:
        '200':
          description: "Course proposals"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/course_model_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      description: Insertion of course proposals
      summary: Insertion of course proposals
      tags:
        - courses
        - propositions
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
      requestBody:
        description: Object to be inserted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposal_object_insertion'
      responses:
        '201':
          $ref: '#/components/responses/CourseInsertion'
        '400':
          $ref: '#/components/responses/CourseInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/CourseInsertion'
  /v1/propositions/approval:
    put:
      description: Confirmation of course proposals. If the approved parameter is true, it will approve the course. If it is false, it will delete the project class from the database. If the course of reference has no other classes, it will delete the course completely.
      summary: Course confirmation
      tags:
        - courses
        - propositions
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_approved'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/CourseInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/growth_areas:
    get:
      description: List of growth areas
      summary: List of growth areas
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Growth areas list"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/growth_area_data'
                    description: "Data return from the api"
  /v1/student/{student_id}:
    get:
      description: information of the student
      summary: Student information
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
      tags:
        - students
        - v1
      responses:
        '200':
          description: "Student information"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/student_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Update of information of the student
      summary: Update student information
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
      tags:
        - students
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_info_data'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/student/{student_id}/password:
    put:
      description: Update of password of the student
      summary: Update student password
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
      tags:
        - students
        - v1
      requestBody:
        description: Object to be inserted
        required: false
        content:
          application/json:
            schema:
              type: string
              description: "Password to be updated"
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'      
  /v1/student/{student_id}/annual_credits:
    get:
      description: Annual credits situation of the student
      summary: Student annual credits
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_school_year'
      tags:
        - students
        - v1
      responses:
        '200':
          description: "Student annual credits information"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/student_credits_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachings:
    get:
      description: Get all the teachings in the system
      summary: View of all the teachings
      tags:
        - teachings
        - v1
      responses:
        '200':
          description: "Collection of teachings"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teaching_data'
                    description: "Data return from the api"
  /v1/teachings/{teaching_id}:
    get:
      description: Get a specific teaching from its id.
      parameters:
        - $ref: '#/components/parameters/path_teaching_id'
      summary: View of a single teaching
      tags:
        - teachings
        - v1
      responses:
        '200':
          description: "View of a single teaching"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teaching_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachers:
    get:
      description: Get all the teachers in the system
      summary: View of all the teachers
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Collection of teachers"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teacher_data'
                    description: "Data return from the api"
    post:
      description: Add new teachers to the system
      parameters:
        - $ref: '#/components/parameters/header_token'
      summary: Add new teacher
      tags:
        - teachers
        - v1
      requestBody:
        description: Array of teacher user
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/teacher_insert_data'
      responses:
        '201':
          $ref: '#/components/responses/TeacherInsert'
        '400':
          $ref: '#/components/responses/TeacherInsert'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/TeacherInsert'
  /v1/constraints:
    get:
      description: Get all the constraints in the system
      parameters:
        - $ref: '#/components/parameters/query_session_id'
        - $ref: '#/components/parameters/query_year_of_constr'
        - $ref: '#/components/parameters/query_area_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_study_year'
        - $ref: '#/components/parameters/query_study_address'
      summary: View of all the constraints
      tags:
        - constraints
        - v1
      responses:
        '200':
          description: "Collection of constraints"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/constraints_data'
                    description: "Data return from the api"      
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      description: Insertion of credit constraints for some sessions
      summary: Insertion of credit constraints
      tags:
        - constraints
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
      requestBody:
        description: Object to be inserted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/constraints_object'
      responses:
        '201':
          $ref: '#/components/responses/ConstraintsInsertion'
        '400':
          $ref: '#/components/responses/ConstraintsInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/ConstraintsInsertion'
  /v1/constraints/{constr_id}:
    put:
      description: Update of credit constraints for a certain session
      summary: Update of credit constraints
      tags:
        - constraints
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
      requestBody:
        description: Number of credits to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                num_credits:
                  type: number
                  description: "Number of credits to be update"
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'      
    delete:
      description: Delete the constraint specified if it is not for a past, current, imminent
      parameters:
        - $ref: '#/components/parameters/path_constr_id'
        - $ref: '#/components/parameters/header_token'
      summary: Delete course
      tags:
        - constraints
        - v1
      responses:
        '200':
          $ref: '#/components/responses/AcceptDelete'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/move_class: 
    put:
      description: Update of subscription of a student made by an admin
      summary: Update of subscriptions
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
      requestBody:
        description: Classes information (from class, to class)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/move_class'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden' 
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/study_addresses:
    get:
      description: List of study addresses of the school
      summary: Get of study addresses
      tags:
        - v1
        - study addresses
      responses:
        '200':
          description: "Collection of study addresses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/addresses_data'
                    description: "Data return from the api"
  /v1/teachers/{teacher_id}/project_class:
    post:
      description: Insertion of a teacher to some project classes
      summary: Insertion of teachers to classes
      tags:
        - teachers
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
      requestBody:
        description: Object to be inserted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teacher_interaction_with_project_class'
      responses:
        '201':
          $ref: '#/components/responses/TeacherProjectClassInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
    delete:
      description: Delete of a teacher from some project classes
      summary: Delete of teachers from classes
      tags:
        - teachers
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
      requestBody:
        description: Object to be deleted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teacher_interaction_with_project_class'
      responses:
        '201':
          $ref: '#/components/responses/AcceptDelete'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Resource not found"
    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
          example:
            success: false
            username: true
            password: false
            description: "Authentication failed. Wrong password."
    BadInputs:
      description: Bad Input
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Bad input. Missing required information"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "The student is already subscribe to this project class"
    AcceptInsert:
      description: Insert record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "accepted"
            description: "Inserted 1 rows"
    AcceptDelete:
      description: Delete record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "deleted"
            description: "Deleted 1 rows"
    AcceptUpdate:
      description: Update record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
              confirmation_date:
                type: string
                format: date
                description: "Confirmation date for course approval"
            example:
              status: "accepted"
              description: "Resources updated successfully"
    Forbidden:
      description: Operation forbided
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
    MissingToken:
      description: Missing authentication token
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
    CourseInsertion:
      description: Course proposal insertion response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              course_id:
                type: integer
                description: "Course id of the proposal"
              publication:
                type: string
                format: date
                description: "Publication date of course proposal"
              course_exist:
                type: boolean
                description: "Tells if the course_id refers to a previous proposal. If set to true means it only added the project class proposal"
              wrong_ord_class:
                type: boolean
                description: "Tells if some values of the ordinary classes tried to insert were non valid and consequently not inserted"
              wrong_context: 
                type: boolean
                description: "Tells if some values of the contexts tried to insert were non valid and consequently not inserted"
              wrong_teaching: 
                type: boolean
                description: "Tells if some values of the teachings tried to insert were non valid and consequently not inserted"
              wrong_teacher: 
                type: boolean 
                description: "Tells if some values of the teachers tried to insert were non valid and consequently not inserted"
              wrong_growth_area:
                type: boolean
                description: "Tells if some values of the growth areas tried to insert were non valid and consequently not inserted"
              new_teacher:
                type: boolean
                description: "If result of insertion is a duplicate, tells if there are new teachers the user tried to insert"
    ConstraintsInsertion:
      description: Constraint insertion response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              wrong_session:
                type: boolean
                description: "Tells if there is a session that is not valid or not existing"
              wrong_area:
                type: boolean
                description: "Tells if there is an area that is not valid or not existing"
              wrong_class:
                type: boolean
                description: "Tells if some values of the ordinary classes tried to insert were non valid and consequently not inserted"
              wrong_context: 
                type: boolean
                description: "Tells if some values of the contexts tried to insert were non valid and consequently not inserted"
              constraint_present:
                type: boolean
                description: "Tells if some constraints were already presents and consequently not inserted"
              starting_id:
                type: string
                description: "First id of the constraints that were inserted"
              num_constraints_inserted:
                type: integer
                description: "Tells how many constraints were inserted in the database"
    SessionInsertion:
      description: Learning session insertion response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              wrong_session:
                type: boolean
                description: "Tells if there is a session that has ending date smaller than starting date"
              existing_session:
                type: boolean
                description: "Tells if there is a session that was already inserted (a combination of number + school_year)"
              first_inserted_id:
                type: string
                description: "First id of the learning sessions that were inserted"
              num_inserted:
                type: integer
                description: "Tells how many learning sessions were inserted in the database"
    CourseUpdate:
      description: Course update response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              wrong_context:
                type: boolean
                description: "Tells if some values of the contexts tried to update were non valid and consequently not updated"
              wrong_ord_class:
                type: boolean
                description: "Tells if some values of the ordinary classes tried to update were non valid and consequently not updated"
              wrong_teacher:
                type: boolean
                description: "Tells if some values of the teachers tried to update were non valid and consequently not updated"
              wrong_teaching:
                type: boolean
                description: "Tells if some values of the teachings tried to update were non valid and consequently not updated"
              new_classes:
                type: boolean
                description: "Tells if some values of the ordinary classes tried to update were new and consequently not updated"
              new_teachings:
                type: boolean
                description: "Tells if some values of the teachings tried to update were new and consequently not updated"
              new_teacher:
                type: boolean
                description: "Tells if some values of the teachers tried to update were new and consequently not updated"
    TeacherProjectClassInsert:
      description: Teacher insertion to project class response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              dup_entries:
                type: boolean
                description: "Tells if some sections that were tried to be added to the teacher were already present and consequently not insert"
              wrong_sections:
                type: boolean
                description: "Tells if some sections that were tried to be added to the teacher were non valid and consequently not insert"
    AdminInsert:
      description: Admin insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_admin:
                type: boolean
                description: "Tells if an admin the user tried to add was already present"
              wrong_admin:
                type: boolean
                description: "Tells if an admin the user tried to add was not correct and consequently not added"
    TeacherInsert:
      description: Teacher insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_teacher:
                type: boolean
                description: "Tells if a teacher the user tried to add was already present"
              wrong_teacher:
                type: boolean
                description: "Tells if a teacher the user tried to add was not correct and consequently not added"
    StudentInsert:
      description: Student insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_student:
                type: boolean
                description: "Tells if a student the user tried to add was already present"
              wrong_student:
                type: boolean
                description: "Tells if a student the user tried to add was not correct and consequently not added"
    OrdClassInsert:
      description: Ordinary classes insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_class:
                type: boolean
                description: "Tells if an ordinary class the user tried to add was already present"
              wrong_class:
                type: boolean
                description: "Tells if an ordinary class the user tried to add was not correct and consequently not added"
    OrdClassComponentsInsert:
      description: Ordinary class components insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_comp:
                type: boolean
                description: "Tells if a components of an ordinary class the user tried to add was already present"
              wrong_comp:
                type: boolean
                description: "Tells if a components of an ordinary class the user tried to add was not correct and consequently not added"
    OrdClassTeachersInsert:
      description: Ordinary class teachers insertion to the system response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              existing_teach:
                type: boolean
                description: "Tells if a teacher of an ordinary class the user tried to add was already present"
              wrong_teach:
                type: boolean
                description: "Tells if a teacher of an ordinary class the user tried to add was not correct and consequently not added"
  schemas:
    learning_session_data:
      type: object
      properties:
        id:
          type: integer
          description: "Id of the learning session"
        number:
          type: integer
          description: "Number of the learning session inside a certain school year"
        school_year:
          type: integer
          description: "School year in which the learning session takes place"
        start:
          type: string
          format: date
          description: "Starting date of the learning session"
        end:
          type: string
          format: date
          description: "Ending date of the learning session"
        num_groups:
          type: integer
          description: "Max number of group for a certain learning session"
        open_day:
          type: string
          format: date
          description: "Date of the open day where the teachers are going to illustrate to the students the details of the courses they can choose in the session. From there the students can start choosing their courses to add to the curriculum. The default one is the start of the previous learning session"
    learning_area_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the learning area"
        italian_title:
          type: string
          description: "Italian title of the learning area"
        english_title:
          type: string
          description: "English title of the learning area"
        italian_description:
          type: string
          description: "Italian description of the learning area"
        english_description:
          type: string
          description: "English description of the learning area"
        credits:
          type: boolean
          description: "Number of credits for that specific learning area in that specific session"
    growth_area_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the growth area"
        italian_title:
          type: string
          description: "Italian title of the growth area"
        english_title:
          type: string
          description: "English title of the growth area"
        italian_description:
          type: string
          description: "Italian description of the growth area"
        english_description:
          type: string
          description: "English description of the growth area"
    learning_area_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the learning area associated to the reference"
    course_data_short:
      type: object
      properties:
        id:
          type: string
          description: "Id of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        credits:
          type: integer
          description: "Credits that the course provides"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        group:
          type: integer
          description: "Specifies in which group a certain course belongs. If two courses have the same group, they are concurrent. (Only for v2)"
        pending:
          type: boolean
          description: "Is the student already subscribed to this course? Or is he waiting for a response?"
        section:
          type: string
          description: "Section of the project class in case the student is subscribed to it"
    proposer_teacher_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the teacher that proposed the course"
    certifying_admin_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the admin that certified the course"
    course_data_complete:
      type: object
      properties:
        id:
          type: string
          description: "Id of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        creation_school_year:
          type: integer
          description: "Creation school year of the course"
        italian_description:
          type: string
          description: "Italian description of the course"
        english_description:
          type: string
          description: "English description of the course"
        up_hours:
          type: integer
          description: "Number of hours of the course the students will follow from home"
        credits:
          type: integer
          description: "Credits that the course provides"
        italian_expected_learning_results:
          type: string
          description: "Italian expected learning results for the students that attend the course"
        english_expected_learning_results:
          type: string
          description: "English expected learning results for the students that attend the course"
        italian_criterions:
          type: string
          description: "Italian criterions for evaluate the knowledge of the students"
        english_criterions:
          type: string
          description: "English criterions for evaluate the knowledge of the students"
        italian_activities:
          type: string
          description: "Italian activities that will be carried out during the course"
        english_activities:
          type: string
          description: "English activities that will be carried out during the course"
        learning_area_ref: 
          $ref: "#/components/schemas/learning_area_ref"
          description: "Reference to the learning area associated to the course"
        italian_learning_area:
          type: string
          description: "Italian name of the learning area associated with the course"
        english_learning_area:
          type: string
          description: "English name of the learning area associated with the course"
        italian_growth_area:
          type: string
          description: "Italian name of the growth area associated with the course"
        english_growth_area:
          type: string
          description: "English name of the growth area associated with the course"
        min_students:
          type: integer
          description: "Minimum number of students required in order to start the course"
        max_students:
          type: integer
          description: "Maximum number of students expected to partake in a course to have an ideal class"
        proposer_teacher_ref:
          $ref: '#/components/schemas/proposer_teacher_ref'
          description: "Reference to the teacher that proposed the course"
        teacher_name:
          type: string
          description: "Name of the teacher that proposed the course"
        teacher_surname:
          type: string
          description: "Surname of the teacher that proposed the course"
        certifying_admin_ref:
          $ref: '#/components/schemas/proposer_teacher_ref'
          description: "References to the admin that certifies the course"
        admin_name:
          type: string
          description: "Name of the admin that approved the course"
        admin_surname:
          type: string
          description: "Surname of the admin that approved the course"
        admin_confirmation:
          type: string
          format: date
          description: "Date of the approval of the admin for that course"
        assets:
          type: string
          description: "Path to assets directory in the server"
    course_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Course id of the proposition"
    course_model_data:
      type: object
      properties:
        course_ref:
          $ref: '#/components/schemas/course_ref'
          description: "References to the course the model refers to"
        italian_title:
          type: string
          description: "Italian title of the course model"
        english_title:
          type: string
          description: "English title of the course model"
        creation_school_year:
          type: integer
          description: "Creation school year of the course model"
        project_class_confirmation_date: 
          type: string
          format: date
          description: "Confirmation date of the project class"
        project_class_to_be_modified:
          type: boolean
          description: "Is at true if the project class has to be modified"
        course_confirmation_date:
          type: string
          format: date
          description: "Confirmation date of the course"
        course_to_be_modified:
          type: boolean
          description: "Is at true if the course has to be modified"
        certifying_admin_ref:
          $ref: '#/components/schemas/certifying_admin_ref'
          description: "Refers to the admin that confirms the proposition. Not present if the user wants only the recent models"
        admin_name:
          type: string
          description: "Name of the certifying admin of the proposition"
        admin_surname:
          type: string
          description: "Surname of the certifying admin of the proposition"
        proposer_teacher_ref:
          $ref: '#/components/schemas/proposer_teacher_ref'
          description: "Refers to the proposer teacher of a proposition. Not present if the user is a teacher or it displays the recent models"
        teacher_name:
          type: string
          description: "Name of the proposer teacher of the proposition"
        teacher_surname:
          type: string
          description: "Surname of the proposer teacher of the proposition"
    annual_credits_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            study_year:
              type: integer
              description: "Study year which the credit model refers"
            study_address:
              type: string
              description: "Study address which the credit model refers"
            definition_year:
              type: integer
              description: "Year of the definition of the credit model"
    ordinary_class_data:
      type: object
      properties:
            study_year_ref:
              $ref: '#/components/schemas/study_year_ref'
              description: "References to the study year of the ordinary class"
            study_address_ref:
              $ref: '#/components/schemas/study_address_ref'
              description: "References to the study address of the ordinary class"
            school_year:
              type: integer
              description: "School year in which the class what defined"
            italian_displayed_name:
              type: string
              description: "Italian name of the class displayed"
            english_displayed_name:
              type: string
              description: "English name of the class displayed"
    study_year_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the study year"
    study_address_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the study address"
    learining_context_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: string
              description: "Id of the learning context"
    ordinary_classes_course_data:
      type: object
      properties:
        study_year_ref:
          $ref: '#/components/schemas/study_year_ref'
          description: "References to the study year of the ordinary class"
        study_address_ref:
          $ref: '#/components/schemas/study_address_ref'
          description: "References to the study address of the ordinary class"
        italian_title:
          type: string
          description: "Italian title of the ordinary class"
        english_title:
          type: string
          description: "English title of the ordinary class"
        presidium:
          type: boolean
          description: "Specifies if the address of the class is the one for which the course was created for"
        main_study_year:
          type: boolean
          description: "Specifies if the study year of the class is the one for which the course was created for"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Reference to the learning context which the course is open to the ordinary classes"
    teaching_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the teaching"
    teaching_related_data:
      type: object
      properties:
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
        italian_title:
          type: string
          description: "Italian title of the teaching"
        english_title:
          type: string
          description: "English title of the teaching"
    growth_area_related_data:
      type: object
      properties:
        growth_area_ref:
          $ref: '#/components/schemas/growth_area_ref'
        italian_title:
          type: string
          description: "Italian title of the growth area"
        english_title:
          type: string
          description: "English title of the growth area"
        italian_description:
          type: string
          description: "Italian description of the growth area"
        english_description:
          type: string
          description: "English description of the growth area"
    growth_area_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the growth area associated to the reference"
    learning_context_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the learning context associated to the reference"
    learning_context_data:
      type: object
      properties:
        id:
          type: string
          description: "Learning context id"
        italian_title:
          type: string
          description: "Italian title of the learning context"
        english_title:
          type: string
          description: "English title of the learning context"
        italian_description:
          type: string
          description: "Italian description of the learning context"
        english_description:
          type: string
          description: "English description of the learning context"
        credits:
          type: integer
          description: "Returns the total amount of credits the student needs to have for that specific learning context in case there is not learning areas constraints. If those constraints exist, its value will be null"
    student_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    teacher_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    admin_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    authentication_res:
      type: object
      properties:
        success:
          type: boolean
          description: "Success of the authentication"
          example: true
        message:
          type: string
          description: "Message about the result of the authentication"
          example: "Authentication OK"
        user:
          type: string
          description: "Type of user who logged in"
          example: "student"
        token:
          type: string
          description: "Authentication token"
        username:
          type: string
          description: "User's username"
        id:
          type: string
          description: "ID of the user who has logged in"
        expirationDate:
          type: string
          format: date
          description: "Date of expiration of the token"
    curriculum_data:
      type: object
      properties:
        id:
          type: integer
          description: "Identifier of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        section:
          type: string 
          description: "Section of the project class the student is currently enrolled in"
        credits:
          type: integer
          description: "Number of credits that a course give to a student"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        learning_context_ref:
          $ref: '#/components/schemas/learning_context_ref'
          description: "Reference to the learning context associated to my subscription to the course"
        final_grade:
          type: integer
          description: "Final grade of a certain course. It could be not present if the course is not over yet or has to start."
    curriculum_data_v2:
      type: object
      properties:
        id:
          type: integer
          description: "Identifier of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        section:
          type: string 
          description: "Section of the project class the student is currently enrolled in"
        credits:
          type: integer
          description: "Number of credits that a course give to a student"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Reference to the learning context associated to my subscription to the course"
        final_grade:
          type: integer
          description: "Final grade of a certain course. It could be not present if the course is not over yet or has to start."
        future_course:
          type: boolean
          description: "Tells if the course that is displaying in the curriculum is a course that will be hold in the imminent or a future learning session"
    grade_data:
      type: object
      properties:
        id:
          type: integer
          description: "Grade Identifier"
        italian_description:
          type: string
          description: "Italian description of a grade"
        english_description:
          type: string
          description: "English description of a grade"
        publication:
          type: string
          format: date
          description: "Date of the publication of the grade"
        grade:
          type: integer
          description: "Grade of the student"
        final:
          type: boolean
          description: "Tells the user if the grade is the final one or not"
    my_project_class_data:
      type: object
      properties:
        id:
          type: integer
          description: "Course id"
        italian_title:
          type: string
          description: "Italian description of a course"
        english_title:
          type: string
          description: "English description of a course"
        section:
          type: string 
          description: "Section of project class"
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
        my_teaching:
          type: boolean
          description: "Tells if the teaching in teaching_ref is the personal teaching of the teacher"
    associated_project_class_data:
      type: object
      properties:
        id:
          type: integer
          description: "Course id"
        italian_title:
          type: string
          description: "Italian description of a course"
        english_title:
          type: string
          description: "English description of a course"
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
    my_ordinary_class_data:
      type: object
      properties:
        study_year:
          type: integer
          description: "Class study year"
        address:
          type: string
          description: "Class address"
        school_year:
          type: string
          description: "Class school year"
        section:
          type: string 
          description: "Section of ordinary class"
    project_class_component_data:
      type: object
      properties:
        id:
          type: integer
          description: Student Id
        name:
          type: string
          description: Name of the student
        surname:
          type: string
          description: Surname of the student
        ord_class_study_year:
          type: integer
          description: Study year of the ordinary class of the student
        ord_class_address:
          type: string
          description: Address of the ordinary class the student attend during the project class period
        ord_class_section:
          type: string
          description: Section of the ordinary class the student attend during the project class period
    project_class_teachers_data:
      type: object
      properties:
        teacher_ref:
          type: integer
          description: Teacher Id
        name:
          type: string
          description: Name of the teacher
        surname:
          type: string
          description: Surname of the teacher
        section:
          type: string
          description: Section in which the teacher teaches
        main_teacher:
          type: boolean
          description: Tells if the teacher is the main teacher of the course
    project_classes_data:
      type: object
      properties:
        course_id: 
          type: integer
          description: Id of the course the project class refers to
        learning_session:
          type: integer
          description: Id of the course the project class refers to
        italian_title:
          type: string
          description: Italian name of the project class
        english_title:
          type: string
          description: English name of the project class
        group:
          type: integer
          description: Group in which the project class belongs
        teacher_ref:
          type: integer
          description: Proposer teacher Id
        teacher_name:
          type: string
          description: Name of the proposer teacher
        teacher_surname:
          type: string
          description: Surname of the proposer teacher
        admin_ref:
          type: integer
          description: Certifying admin Id
        admin_name:
          type: string
          description: Name of the certifying admin
        admin_surname:
          type: string
          description: Surname of the certifying admin
        to_be_modified:
          type: boolean
          description: Tells if the class is to be modified
    ordinary_class_component_data:
      type: object
      properties:
        id:
          type: integer
          description: Student Id
        name:
          type: string
          description: Name of the student
        surname:
          type: string
          description: Surname of the student
        orientation_credits:
          type: integer
          description: Number of credits of orientation courses of the student. Can only be seen by and admin user.
        clil_credits:
          type: integer
          description: Number of credits of clil courses of the student. Can only be seen by and admin user.
    ordinary_class_non_compliant_component_data:
      type: object
      properties:
        id:
          type: integer
          description: Student Id
        name:
          type: string
          description: Name of the student
        surname:
          type: string
          description: Surname of the student
    learning_sessions_courses_data:
      type: object
      properties:
        course_id:
          type: integer
          description: Course Id
        session_id:
          type: integer
          description: Session Id where a student has taken that course
    learning_contexts_courses_data:
      type: object
      properties:
        course_id:
          type: integer
          description: Course Id
        context_id:
          type: string
          description: context Id of the course the student can follow
    teacher_active_year_data:
      type: object
      required:
        - "year"
      properties:
        study_year:
          type: integer
          description: "Study year of the ordinary class the teacher was active teaching"
        address:
          type: string
          description: "Address of the ordinary class the teacher was active teaching"
        year:
          type: integer
          description: "Year in with the teacher was active teaching in the school"
    project_class_section_data:
      type: object
      properties:
        section:
          type: string
          description: "Section of the project class in a given learning session"
    ordinary_class_ref:
      type: object
      properties:
        study_year:
          type: integer
          description: "Study year of the ordinary class"
        study_address:
          type: string
          description: "Study address of the ordinary class"
    student_data:
      type: object
      properties:
        cf:
          type: string
          description: "Fiscal code of the student. The value is crypted"
        username:
          type: string
          description: "Userame of the student"
        name:
          type: string
          description: "Name of the student"
        surname:
          type: string
          description: "Surname of the student"
        gender:
          type: string
          description: "Gender of the student. It may be crypted"
        birth_date:
          type: string
          format: date
          description: "Birth date of the student. It may be crypted"
        address:
          type: string
          description: "Address of the student. It may be crypted"
        email:
          type: string
          description: "Email of the student"
        google:
          type: boolean
          description: "Tells if the student has already access with a google account"
        first_access:
          type: boolean
          description: "Tells if the student has not done a first access to the application yet."
        ordinary_class_ref:
          $ref: '#/components/schemas/ordinary_class_ref'
          description: Current ordinary class of the student.
        class_section:
          type: string
          description: "Section of the current ordinary class of the student"
        assets:
          type: string
          description: "Path to assets directory in the server"
    student_ordinary_class_data:
      type: object
      properties:
        study_year:
          type: integer
          description: "Ordinary class study year"
        address:
          type: string
          description: "Ordinary class address"
        section:
          type: string
          description: "Ordinary class section"
    student_project_classes_data:
      type: object
      properties:
        italian_title:
          type: string
          description: "Italian title of the project class"
        english_title:
          type: string
          description: "English title of the project class"
        section:
          type: string
          description: "Section of the project class"
    project_classes_announcements_data:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the announcement"
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string
          description: "English title of the announcement"
        publishment:
          type: string
          format: date
          description: "Date of publication of the announcement"
    announcement_data:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the announcement"
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string
          description: "English title of the announcement"
        publishment:
          type: string
          format: date
          description: "Date of publication of the announcement"
        italian_message:
          type: string
          description: "Italian message in the announcement"
        english_message:
          type: string
          description: "English message in the announcement"
    proposal_object_insertion:
      type: object
      required:
        - italian_title
        - english_title
        - italian_descr
        - english_descr
        - up_hours
        - credits
        - italian_exp_l
        - english_exp_l
        - italian_cri
        - english_cri
        - italian_act
        - english_act
        - area_id
        - growth_list
        - min_students
        - max_students
        - session_id
        - access_object
        - teaching_list
        - class_group
        - num_section
        - teacher_list
      properties:
        course_id:
          type: integer
          description: "Course id of the course. If specified refers to a previous model already confirmed"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        italian_descr:
          type: string
          description: "Italian description of the course"
        english_descr:
          type: string
          description: "English description of the course"
        up_hours:
          type: integer
          description: "Up hours planned for the course"
        credits:
          type: integer
          description: "Number of credits planned for the course"
        italian_exp_l:
          type: string
          description: "Italian description of the expected learning results of the course"
        english_exp_l:
          type: string
          description: "English description of the expected learning results of the course"
        italian_cri:
          type: string
          description: "Italian description of the criterions of the course"
        english_cri:
          type: string
          description: "English description of the criterions of the course"
        italian_act:
          type: string
          description: "Italian description of the learning activities of the course"
        english_act:
          type: string
          description: "English description of the learning activities of the course"
        area_id:
          type: string
          description: "Id of the learning area which the course belongs"
        growth_list:
          type: array
          items:
            type: integer
            description: "Id of one growth area related to the course"
          description: "List of ids of the growth area related to the course"
        min_students:
          type: integer
          description: "Min number of student of the course"
        max_students:
          type: integer
          description: "Max number of student of the course"
        session_id:
          type: integer
          description: "Learning session in which the teacher wants to hold the course"
        access_object:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/context_property"
            description: "Refers to the context you want to open the course for some class. The label of the object is the id of the context"
        teaching_list:
          type: array
          items:
            type: string
            description: "Id of the teaching"
        class_group:
          type: integer
          description: "Group of the project class proposed"
        num_section:
          type: integer
          description: "Max number of section expected for the project class proposed"
        teacher_list:
          type: array
          items:
            $ref: '#/components/schemas/teacher_list_property'
            description: "Refers to the teachers you want to associate with the course, specifying teacher, sections in which he teaches and if he is the coordinator"
    context_property:
      type: array
      items:
        type: object
        properties:
          study_year:
            type: integer
            description: "Study year of the class the user wants to open the course for a specific learning context"
          study_address:
            type: string
            description: "Study address of the class the user wants to open the course for a specific learning context"
          main_study_year:
            type: boolean
            description: "Is the study year of the class the main one for this course?"
          presidium:
            type: boolean
            description: "Is the study address of the class the main one for this course?"
        description: "List of ordinary classes the user wants to open the course for a specific learning context"
    teacher_list_property:
      type: object
      properties:
        teacher_id:
          type: integer
          description: "Id of the teacher we want to associate to a course"
        main:
          type: boolean
          description: "Tells if the teacher in question is the class coordinator"
        sections:
          type: array
          description: "Array of sections in which the teacher teaches for a project class"
          items:
            type: string
    student_credits_data:
      type: object
      properties:
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the credit model"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Reference to the learning context associated to the credit model"
        credits:
          type: integer
          description: "Number of credits the student has already obtained"
        max_credits:
          type: integer
          description: "Number of total credits the student has to obtain for a certain combination of contexts and areas in a year."
    teaching_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the teaching"
        italian_title:
          type: string
          description: "Italian title of the teaching"
        english_title: 
          type: string
          description: "English title of the teaching"
        italian_description: 
          type: string
          description: "Italian description of the teaching"
        english_description:
          type: string
          description: "English description of the teaching"
    teacher_data:
      type: object
      properties:
        id:
          type: integer
          description: "Id of the teacher"
        cf:
          type: string
          description: "Fiscal code of the teacher. The value is crypted"
        username:
          type: string
          description: "Userame of the teacher"
        name:
          type: string
          description: "Name of the teacher"
        surname:
          type: string
          description: "Surname of the teacher"
        gender:
          type: string
          description: "Gender of the teacher. It may be crypted"
        birth_date:
          type: string
          format: date
          description: "Birth date of the teacher. It may be crypted"
        address:
          type: string
          description: "Address of the teacher. It may be crypted"
        email:
          type: string
          description: "Email of the teacher"
    learning_session_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the learning session associated to the reference"
    constraints_data:
      type: object
      properties:
        id:
          type: integer
          description: "Id of the constraint"
        learning_session_ref:
          $ref: '#/components/schemas/learning_session_ref'
          description: "Refers to the learning session"
        ordinary_class_ref:
          $ref: '#/components/schemas/ordinary_class_ref'
          description: "Refers to the ordinary class"
        ordinary_class_school_year:
          type: integer
          description: "First year of a school year that represents it e.g. school year 2022/2023 -> school_year = 2022"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Refers to the learning context"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Refers to the learning area"
        credits:
          type: integer
          description: "Number of credits for a specific constraint"
    constraints_object:
      type: object
      properties:
        additionalProperties:
            $ref: "#/components/schemas/session_property"
            description: "Refers to the session id you want to add new constraints to"
    session_property:
      type: array
      items:
        type: object
        properties:
          context_id:
            type: string
            description: "Id of the context the constraint refers to"
          area_id:
            type: string
            description: "Id of the area the constraint refers to"
          credits:
            type: integer
            description: "Number of credits for the constraint"
          classes:
            type: array
            items:
              $ref: '#/components/schemas/class_property'
              description: "Object containing a class information to be added"
    class_property:
      type: object
      properties:
        study_year:
          type: integer
          description: "Study year of the ordinary class that will have the constraint"
        study_address: 
          type: string
          description: "Study address of the ordinary class that will have the constraint"
    session_object_insertion:
      type: object
      properties:
        sessions_list:
          type: array
          items:
            $ref: '#/components/schemas/single_session_obj'
          description: "List of learning sessions to add"
    single_session_obj:
      type: object
      required:
        - number
        - school_year
        - start_date
        - end_date
        - num_groups
      properties:
        number:
          type: integer
          description: "Number of the session to be add"
        school_year:
          type: integer
          description: "School year of the session to be add. It is only the first year of the school year of reference (e.g. school year 2022/2023 => school_year = 2022)"
        start_date:
          type: string
          format: date
          description: "Starting date of the session to be add"
        end_date:
          type: string
          format: date
          description: "Ending date of the session to be add"
        num_groups:
          type: integer
          description: "Maximum number of groups of the session to be add"
        open_day:
          type: string
          format: date
          description: "Open day date for the session to be add"
    update_user_info_data:
      type: object
      properties:
        name:
          type: string
          description: "Name of the student to be update"
        surname:
          type: string
          description: "Surname of the student to be update"
        gender:
          type: string
          description: "Gender of the student to be update"
        birth_date:
          type: string
          format: date
          description: "Birth date of the student to be update"
        address:
          type: string
          description: "Address of the student to be update"
    announcements_post_data:
      type: object
      required:
        - sections
        - italian_title
        - english_title
        - italian_message
        - english_message
      properties:
        sections:
          type: array
          items:
            type: string
          description: "Sections of the project class the teacher wants to publish"
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string 
          description: "English title of the announcement"
        italian_message:
          type: string
          description: "Italian content of the announcement"
        english_message:
          type: string
          description: "English content of the announcement"
    final_confirmation_data:
      type: object
      properties:
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string 
          description: "English title of the announcement"
        italian_message:
          type: string
          description: "Italian content of the announcement"
        english_message:
          type: string
          description: "English content of the announcement"
    update_session_data:
      type: object
      properties:
        start_date:
          type: string
          format: date
          description: "New starting date to be updated"
        end_date:
          type: string
          format: date
          description: "New ending date to be updated"
        num_groups:
          type: integer
          description: "New number of groups to be updated"
    move_class:
      type: object
      properties:
        from:
          type: object
          properties:
            course_id:
              type: integer
              description: "Id of the course of the project class from where you want to move the student from"
            session_id:
              type: integer
              description: "Id of the session of the project class from where you want to move the student from"
          description: "Information of the project class you want to move the student from"
        to:
          type: object
          properties:
            course_id:
              type: integer
              description: "Id of the course of the project class where you want to move the student to"
            session_id:
              type: integer
              description: "Id of the session of the project class where you want to move the student to"
            section:
              type: string
              description: "Section of the project class where you want to move the student to"
          description: "Information of the project class you want to move the student from"
    course_update_data:
      type: object
      required:
        - session_id
      properties:
        italian_title:
          type: string
          description: "Italian title of the course if specified"
        english_title:
          type: string
          description: "English title of the course if specified"
        italian_descr:
          type: string
          description: "New italian description of the course"
        english_descr:
          type: string
          description: "New english description of the course"
        up_hours:
          type: integer
          description: "New up hours planned for the course"
        credits:
          type: integer
          description: "Number of credits planned for the course if specified"
        italian_exp_l:
          type: string
          description: "New italian description of the expected learning results of the course"
        english_exp_l:
          type: string
          description: "New english description of the expected learning results of the course"
        italian_cri:
          type: string
          description: "New italian description of the criterions of the course"
        english_cri:
          type: string
          description: "New english description of the criterions of the course"
        italian_act:
          type: string
          description: "New italian description of the learning activities of the course"
        english_act:
          type: string
          description: "New english description of the learning activities of the course"
        area_id:
          type: string
          description: "Id of the learning area which the course belongs if specific"
        growth_list:
          type: array
          items:
            type: integer
            description: "Id of one growth area related to the course"
          description: "List of ids of the growth area related to the course"
        min_students:
          type: integer
          description: "Min number of student of the course if specified"
        max_students:
          type: integer
          description: "Max number of student of the course if specified"
        session_id:
          type: integer
          description: "Learning session in which the teacher wants to hold the course"
        access_object:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/context_property"
            description: "Refers to the context you want to open the course for some class. The label of the object is the id of the context"
        teaching_list:
          type: array
          items:
            type: string
            description: "Id of the teaching"
        class_group:
          type: integer
          description: "New group of the project class proposed if specified. It will not be changed if the class is in an imminent, current or the first future session."
        num_section:
          type: integer
          description: "New max number of section expected for the project class proposed"
        teacher_list:
          type: array
          items:
            $ref: '#/components/schemas/teacher_list_property'
            description: "Refers to the teachers you want to associate with the course, specifying teacher, sections in which he teaches and if he is the coordinator"
    addresses_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the address"
        italian_title:
          type: string
          description: "Italian title of the address"
        english_title:
          type: string
          description: "English title of the address"
        italian_description:
          type: string
          description: "Italian description of the address"
        english_description:
          type: string
          description: "English description of the address"
        max_classes:
          type: integer
          description: "Max number of classes the address can have"
    teacher_interaction_with_project_class:
      type: object
      required:
        - course_id
        - session_id
        - sections
      properties:
        course_id:
          type: integer
          description: "Course id of the project class you want to add/remove the teacher to/from"
        session_id:
          type: integer
          description: "Learning session id of the project class you want to add/remove the teacher to/from"
        sections:
          type: array
          items:
            type: string
            description: "Single section you want to add/delete the teacher to/from"
          description: "List of sections of the project class specified you want to add/delete the teacher to/from"
        main:
          type: boolean
          description: "Tells if the teacher will be the coordinator of the course you want to add him to"
    admin_data:
      type: object
      required:
        - name
        - surname
      properties:
        cf:
          type: string
          description: "Fiscal code of the admin. "
        name:
          type: string
          description: "Name of the admin"
        surname:
          type: string
          description: "Surname of the admin"
        gender:
          type: string
          description: "Gender of the admin. It may be crypted"
        birth_date:
          type: string
          format: date
          description: "Birth date of the admin. It may be crypted"
        address:
          type: string
          description: "Address of the admin. It may be crypted"
        email:
          type: string
          description: "Email of the admin"
    teacher_insert_data:
      type: object
      required:
        - name
        - surname
      properties:
        cf:
          type: string
          description: "Fiscal code of the teacher. "
        name:
          type: string
          description: "Name of the teacher"
        surname:
          type: string
          description: "Surname of the teacher"
        gender:
          type: string
          description: "Gender of the teacher. It may be crypted"
        birth_date:
          type: string
          format: date
          description: "Birth date of the teacher. It may be crypted"
        address:
          type: string
          description: "Address of the teacher. It may be crypted"
        email:
          type: string
          description: "Email of the teacher"
    student_insert_data:
      type: object
      required:
        - name
        - surname
      properties:
        cf:
          type: string
          description: "Fiscal code of the student. "
        name:
          type: string
          description: "Name of the student"
        surname:
          type: string
          description: "Surname of the student"
        gender:
          type: string
          description: "Gender of the student. It may be crypted"
        birth_date:
          type: string
          format: date
          description: "Birth date of the student. It may be crypted"
        address:
          type: string
          description: "Address of the student. It may be crypted"
        email:
          type: string
          description: "Email of the student"
    ordinary_classes_insert_data:
      type: object
      required:
        - study_year
        - study_address
        - school_year
      properties:
        study_year:
          type: integer
          description: "The study year of the ordinary class"
        study_address:
          type: string
          description: "The study address of the ordinary class"
        school_year:
          type: integer
          description: "School year in which the class what defined"
        italian_displayed_name:
          type: string
          description: "Italian name of the class displayed"
        english_displayed_name:
          type: string
          description: "English name of the class displayed"
    teacher_ord_class_data:
      type: object
      required:
        - id
        - teaching_list
      properties:
        id:
          type: integer
          description: "Id of the teacher the user wants to add"
        coordinator:
          type: boolean
          description: "Tells if the teacher is the coordinator of the class"
        teaching_list:
          type: array
          items:
            type: string
            description: "Id of the teaching the teacher will teach in the class"      
    grade_update:
      type: object
      required:
        - ita_description
        - eng_description
        - grade
      properties:
        ita_description:  
          type: string
          description: "Italian description of the grade"
        eng_description:
          type: string
          description: "English description of the grade"
        grade:
          type: integer
          description: "Grade of the student"
  parameters:
    query_school_year:
      name: school_year
      in: query
      description: Specifies the school year of the resource you want to extract
      schema:
        type: integer
    query_session_id:
      name: session_id
      in: query
      description: Specifies the learning session id for the resources you want to extract
      schema:
        type: integer
    query_course_id:
      name: course_id
      in: query
      description: Specifies the course id for the resources you want to extract
      schema:
        type: integer
    query_section:
      name: section
      in: query
      description: Specifies the section of a project class for the resources you want to extract
      schema:
        type: string
    query_alone:
      name: alone
      in: query
      description: Specifies if the courses displayed should be also the ones without a project class
      schema:
        type: boolean
    query_student_id:
      name: student_id
      in: query
      description: Specifies the id of the student (in the future it will be done thanks to the token)
      schema:
        type: integer
    query_area_id:
      name: area_id
      in: query
      description: Specifies the id of the learning area for the resources we want to extract
      schema:
        type: string
    query_all_data:
      name: all_data
      in: query
      description: Specifies whether the user wants to have all the data or only part of them
      schema:
        type: boolean
    query_admin_info:
      name: admin_info
      in: query
      description: Specifies whether the user wants to have all the data regarding the admin confirmation
      schema:
        type: boolean
    query_credits:  
      name: credits
      in: query
      description: Specifies whether the user wants the information about the credits model
      schema:
        type: boolean
    query_descending:
      name: descending
      in: query
      description: Specifies whether data should be ordered in descending order
      schema:
        type: boolean
    query_year_of:
      name: year_of
      in: query
      description: Specifies the id of the learning session which we want to know the year
      schema:
        type: integer
    query_teacher_id:
      name: teacher_id
      in: query
      description: Specifies the id of the teacher
      schema:
        type: integer
    query_associated_class:
      name: assoc_class
      in: query
      description: Specifies if the project class is associated to the teacher through its teaching
      schema:
        type: boolean
    path_session_id:
      name: session_id
      in: path
      description: Id of the learning session specified
      schema:
        type: integer
      required: true
    path_learning_session_id:
      name: session
      in: path
      description: Id of the learning session specified
      schema:
        type: integer
      required: true
    path_area_id:
      name: area_id
      in: path
      description: Id of the learning area specified
      schema:
        type: string
      required: true
    path_learning_area_id:
      name: area
      in: path
      description: Id of the learning area specified
      schema:
        type: string
      required: true
    path_course_id:
      name: course_id
      in: path
      description: Id of the course specified
      schema:
        type: integer
      required: true
    path_course_id_param:
      name: course
      in: path
      description: Id of the course specified
      schema:
        type: integer
      required: true
    path_student_id:
      name: student_id
      in: path
      description: Id of the student specified
      schema:
        type: integer
      required: true
    path_student_id_param:
      name: student
      in: path
      description: Id of the student specified
      schema:
        type: integer
      required: true
    path_teacher_id:
      name: teacher_id
      in: path
      description: Id of the teacher specified
      schema:
        type: integer
      required: true
    path_teacher_id_param:
      name: teacher
      in: path
      description: Id of the teacher specified
      schema:
        type: integer
      required: true
    header_token:
      name: x-access-token
      in: header
      description: Token of authenticated user
      schema:
        type: string
      required: true
    query_ita_descr:
      name: ita_description
      in: query
      description: Italian description of the resource we want to search/add
      schema:
        type: string
    query_eng_descr:
      name: eng_description
      in: query
      description: English description of the resource we want to search/add
      schema:
        type: string
    query_grade:
      name: grade
      in: query
      description: Grade the user want to add
      schema:
        type: integer
    query_final:
      name: final
      in: query
      description: Specifies if the grade the user want to add is a final grade
      schema:
        type: string
    path_study_year:
      name: study_year
      in: path
      description: Study year of an ordinary class
      schema:
        type: integer
      required: true
    path_address:
      name: address
      in: path
      description: Address of an ordinary class
      schema:
        type: string
      required: true
    query_full_class:
      name: full_class
      in: query
      description: Specifies if we want information about the classes
      schema:
        type: boolean
    path_announcement_id:
      name: announcement_id
      in: path
      description: Id of an announcement
      schema:
        type: integer
      required: true
    query_context_id:
      name: context_id
      in: query
      description: Id of the learning context
      schema:
        type: string
    query_recent_models:
      name: recent_models
      in: query
      description: Tells how many models the user wants to see in the most recent confirmed courses proposals
      schema:
        type: integer
    query_not_confirmed:
      name: not_confirmed
      in: query
      description: Tells if the user wants to see only the non confirmed courses proposals
      schema:
        type: boolean
    query_approved:
      name: approved
      in: query
      description: Tells if the course was confirmed or rejected
      schema:
        type: boolean
    query_year:
      name: year
      in: query
      description: Specifies if the learning session is used to get the school year or it is simply used
      schema:
        type: boolean
    query_publisher_id:
      name: publisher_id
      in: query
      description: Specifies the id of the publisher of an announcement
      schema:
        type: integer
    query_is_admin:
      name: is_admin
      in: query
      description: Specifies if the publisher of the announcement is an administrator or not
      schema:
        type: boolean
    path_teaching_id:
      name: teaching_id
      in: path
      description: Id of the teaching
      schema:
        type: string
      required: true
    query_future_session:
      name: future_session
      in: query
      description: Specifies if the sessions we want to see are only the future ones (no past, current and imminent sessions)
      schema:
        type: boolean
    query_year_of_constr:
      name: year_of
      in: query
      description: Specifies if it should consider simply the learning session id or search for the learning sessions with the same school year as the one passed
      schema:
        type: boolean
    query_study_year:
      name: study_year
      in: query
      description: Study year of the class we want to filter
      schema:
        type: integer
    query_study_address:
      name: study_address
      in: query
      description: Study address of the class we want to filter
      schema:
        type: string
    path_constr_id:
      name: constr_id
      in: path
      description: Constraint id
      schema:
        type: integer
      required: true
    path_admin_id:
      name: admin_id
      in: path
      description: Admin Id
      schema:
        type: integer
      required: true
    query_outcome:
      name: outcome
      in: query
      description: Outcome of confirmation of the subscription.
      schema:
        type: boolean
    path_grade_id:
      name: grade_id
      in: path
      description: Id of the grade
      schema:
        type: boolean
      required: true