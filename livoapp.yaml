openapi: 3.0.0
info:
  version: '2.0.0'
  title: "LivoAPP API"
  description: API for managing school curriculum
servers:
  - url: http://localhost:5000/api
    description: Server to use the web service locally
tags:
  - name: v1
    description: Refers to the version 1 of that api
  - name: v2
    description: Refers to the version 2 of that api
  - name: learning blocks
    description: Everything about learning blocks
  - name: learning area
    description: Everything about learning areas
  - name: courses
    description: Everything about courses
  - name: student
    description: Everything about students
  - name: teachers
    description: Everything about teachers
  - name: admin
    description: Everything about admin
  - name: project classes
    description: Everything about project classes
  - name: ordinary classes
    description: Everything about ordinary classes
  - name: authentication
    description: Authentication methods
  - name: announcements
    description: Announcement methods
  - name: propositions
    description: Course propositions methods
paths:
  /v1/learning_blocks:
    get:
      description: Get all the learning blocks in the system.
      parameters:
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_year_of'
      summary: View of all the learning blocks.
      tags:
        - learning blocks
        - v1
      responses:
        '200':
          description: "Collection of learning blocks."
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_block_data'
                    description: "Data return from the api"
  /v1/learning_blocks/{block_id}:
    get:
      description: Get specific learning block from its ID.
      parameters:
        - $ref: '#/components/parameters/path_block_id'
        - $ref: '#/components/parameters/query_school_year'
      summary: View a specific learning block.
      tags:
        - learning blocks
        - v1
      responses:
        '200':
          description: "View of a single learning block."
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/learning_block_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/learning_areas:
    get:
      description: Get all learning areas in the system.
      parameters:
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_all_data'
        - $ref: '#/components/parameters/query_credits'
      summary: View of all the learning areas.
      tags:
        - learning areas
        - v1
      responses:
        '200':
          description: "Collection of learning areas"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_area_data'
                    description: "Data return from the api"
  /v1/learning_areas/{area_id}:
    get:
      description: Get specific learning area from its id.
      parameters:
        - $ref: '#/components/parameters/path_area_id'
      summary: View a specific learning area
      tags:
        - learning areas
        - v1
      responses:
        '200':
          description: "View of a single learning area"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/learning_area_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses:
    get:
      description: Get all the courses in the system, with basic information and the eventual name provided for their project classes
      parameters:
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_area_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_alone'
      summary: View of all the courses
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_short'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/courses:
    get:
      description: Get all the courses in the system, with basic information and the eventual name provided for their project classes
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_area_id'
        - $ref: '#/components/parameters/query_context_id'
        - $ref: '#/components/parameters/query_alone'
      summary: View of all the courses
      tags:
        - courses
        - v2
      responses:
        '200':
          description: "Collection of courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_short'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}:
    get:
      description: Get a specific course from its id.
      parameters:
        - $ref: '#/components/parameters/path_course_id'
        - $ref: '#/components/parameters/query_admin_info'
      summary: View of a single course
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "View of a single course"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/course_data_complete'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}/opento:
    get:
      description: Get all the classes that can see the course
      parameters:
        - $ref: '#/components/parameters/path_course_id'
      summary: Collection of classes for which the course can be seen
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of ordinary classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_classes_course_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/courses/{course_id}/teachings:
    get:
      description: Get all the teachings that are teach in the course
      parameters:
        - $ref: '#/components/parameters/path_course_id'
      summary: Collection of teaching of the course
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Collection of teachings"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teaching_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/learning_contexts:
    get:
      description: Get all the learning contexts in the system
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Collection of learning contexts
      tags:
        - learning contexts
        - v1
      responses:
        '200':
          description: "Collection of learning contexts"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_context_data'
                    description: "Data return from the api"
  /v1/ordinary_classes:
    get:
      description: Get all the ordinary classes in the system.
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_credits'
        - $ref: '#/components/parameters/query_descending'
      summary: Collection of ordinary classes
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Collection of ordinary classes "
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_class_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/auth/student_login:
    post:
      description: Authentication for student
      summary: Student login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/student_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/teacher_login:
    post:
      description: Authentication for teacher
      summary: Teacher login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/teacher_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/admin_login:
    post:
      description: Authentication for admin
      summary: Admin login
      tags:
        - authentication
        - v1
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/admin_auth'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/google:
    get:
      description: Google authentication. It will redirect to the google authentication page.
      summary: Google authentication
      tags:
        - authentication
        - v1
      responses:
        '200':
          description: Redirect to Google authentication page.
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/students/{student_id}/curriculum:
    get:
      description: Get all the courses in the curriculum of a student for a certain school year.
      summary: Get student curriculum
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_school_year'
      responses:
        '200':
          description: "Student curriculum"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/curriculum_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/students/{student_id}/curriculum:
    get:
      description: |
        Get all the courses in the curriculum of a student for a certain school year. 
        If the user is a student, it will show all the courses he is inscribed in that school year. 
        If the user logged in is a teacher, the api will return only the courses related to the teacher:
          - the ones that he teaches in (his project classes)
          - the ones associated to him through his teachings
      summary: Get student curriculum
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          description: "Student curriculum"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/curriculum_data_v2'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/grades:
    get:
      description: Get all the grades of a student in a certain project class
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Get grades of a student for a course
      tags:
        - students
        - v1
      responses:
        '200':
          description: "Student grades"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/grade_data'
                    description: "Data return from the api"
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      description: Insert a grade for a specific user given a specific project class
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_ita_descr'
        - $ref: '#/components/parameters/query_eng_descr'
        - $ref: '#/components/parameters/query_grade'
        - $ref: '#/components/parameters/query_final'
      summary: Insertion of a student grade
      tags:
        - students
        - v1
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/students/{student_id}/grades:
    get:
      description: Get all the grades of a student in a certain project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Get grades of a student for a course
      tags:
        - students
        - v2
      responses:
        '200':
          description: "Student grades"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/grade_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/inscribe:
    post:
      description: Subscription to a project class by a student
      summary: Subscription to a course
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v2/students/{student_id}/inscribe:
    post:
      description: Subscription to a project class by a student
      summary: Subscription to a course
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v1/students/{student_id}/unscribe:
    post:
      description: Delete of a subscription to a project class by a student
      summary: Delete a subscription to a course
      tags:
        - students
        - v1
      parameters:
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v2/students/{student_id}/unscribe:
    post:
      description: Delete of a subscription to a project class by a student
      summary: Delete a subscription to a course
      tags:
        - students
        - v2
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_context_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/teachers/{teacher_id}/my_project_classes:
    get:
      description: Get all the project classes in which the teacher teaches in a certain learning block
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Get all teacher project classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
  /v2/teachers/{teacher_id}/my_project_classes:
    get:
      description: Get all the project classes in which the teacher teaches in a certain learning block
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_course_id'
      summary: Get all teacher project classes
      tags:
        - teachers
        - v2
      responses:
        '200':
          description: "Teacher project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/teachers/{teacher_id}/associated_project_classes:
    get:
      description: Get all the project classes in which the teacher is associated through its teachings
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Get all teacher associated project classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher associated project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/associated_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
  /v2/teachers/{teacher_id}/associated_project_classes:
    get:
      description: Get all the project classes in which the teacher is associated through its teachings
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_course_id'
      summary: Get all teacher associated project classes
      tags:
        - teachers
        - v2
      responses:
        '200':
          description: "Teacher associated project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/associated_project_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/teachers/{teacher_id}/my_ordinary_classes:
    get:
      description: Get all the ordinary classes in which the teacher is teaching in a specific school year
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_school_year'
      summary: Get all teacher ordinary classes
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher ordinary classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/my_ordinary_class_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/project_classes/{course}/{block}/components:
    get:
      description: Get all components of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_block_id'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_section'
        - $ref: '#/components/parameters/query_associated_class'
      summary: Get project classes components
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes components"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_class_component_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/ordinary_classes/{study_year}/{address}/components:
    get:
      description: Get all components of a specific ordinary class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_study_year'
        - $ref: '#/components/parameters/path_address'
        - $ref: '#/components/parameters/query_school_year'
        - $ref: '#/components/parameters/query_section'
      summary: Get ordinary classes components
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Ordinary classes components"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ordinary_class_component_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/learning_blocks/correspondence:
    post:
      parameters:
        - $ref: '#/components/parameters/query_student_id'
      summary: Search for learning blocks of a list of courses
      tags:
        - learning blocks
        - v1
      requestBody:
        description: Array of courses to search
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                type: string
      responses:
        '200':
          description: "Learning blocks with courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_blocks_courses_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
  /v1/learning_contexts/correspondence:
    post:
      parameters:
        - $ref: '#/components/parameters/query_student_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Search for learning contexts of a list of courses
      tags:
        - learning contexts
        - v1
      requestBody:
        description: Array of courses to search
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                type: string
      responses:
        '200':
          description: "Learning contexts with courses"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/learning_contexts_courses_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
  /v1/teachers/{teacher_id}/active_years:
    get:
      description: Get the years which the teacher was actively teaching in the school
      parameters:
        - $ref: '#/components/parameters/path_teacher_id'
        - $ref: '#/components/parameters/query_full_class'
      summary: Get teacher active teaching years
      tags:
        - teachers
        - v1
      responses:
        '200':
          description: "Teacher's active years"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/teacher_active_year_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/project_classes/{course}/{block}/sections:
    get:
      description: Get all sections of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_block_id'
      summary: Get project classes sections in a certain learning block
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project classes sections"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_class_section_data'
                    description: "Data return from the api"
        '400':
          $ref: "#/components/responses/BadInputs"
        '404':
          $ref: '#/components/responses/NotFound'  
  /v1/ordinary_classes/{student}/{block}:
    get:
      description: Get ordinary class of a student in a specific learning block
      parameters:
        - $ref: '#/components/parameters/path_student_id_param'
        - $ref: '#/components/parameters/path_learning_block_id'
      summary: Get ordinary class of a student in a learning block
      tags:
        - ordinary classes
        - v1
      responses:
        '200':
          description: "Student ordinary class"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    $ref: '#/components/schemas/student_ordinary_class_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/students/{student_id}/project_classes:
    get:
      description: Get project classes of a student in a specific learning block
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_student_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Get project classes of a student in a learning block
      tags:
        - student
        - v1
      responses:
        '200':
          description: "Student project classes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/student_project_classes_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/project_classes/{course}/{block}/announcements:
    get:
      description: Get all the announcements of a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_course_id_param'
        - $ref: '#/components/parameters/path_learning_block_id'
      summary: Get project class announcements
      tags:
        - project classes
        - v1
      responses:
        '200':
          description: "Project class announcements"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_classes_announcements_data'
                    description: "Data return from the api"
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/announcements/{announcement_id}:
    get:
      description: Get specific announcement from its id
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/path_announcement_id'
      tags:
        - announcements
        - v1
      summary: Get specific announcement
      responses:
        '200':
          description: "Project class announcements"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/announcement_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/announcements:
    post:
      description: Publication of announcements for a specific project class
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
      summary: Publication of announcements
      tags:
        - announcements
        - v1
      requestBody:
        description: Data of the announcement
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sections:
                  type: array
                  items:
                    type: string
                  description: "Sections of the project class the teacher wants to publish"
                italian_title:
                  type: string
                  description: "Italian title of the announcement"
                english_title:
                  type: string 
                  description: "English title of the announcement"
                italian_message:
                  type: string
                  description: "Italian content of the announcement"
                english_message:
                  type: string
                  description: "English content of the announcement"
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/propositions:
    get:
      description: List of courses proposals
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
        - $ref: '#/components/parameters/query_recent_models'
        - $ref: '#/components/parameters/query_not_confirmed'
      summary: List of courses proposals
      tags:
        - courses
        - propositions
        - v1
      responses:
        '200':
          description: "Course proposals"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/course_model_data'
                    description: "Data return from the api"
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      description: Insertion of course proposals
      summary: Insertion of course proposals
      tags:
        - courses
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_teacher_id'
      requestBody:
        description: Object to be inserted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposal_object_insertion'
      responses:
        '201':
          $ref: '#/components/responses/CourseInsertion'
        '400':
          $ref: '#/components/responses/CourseInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/CourseInsertion'
  /v1/proposals/approval:
    put:
      description: Confirmation of course proposals
      summary: Course confirmation
      tags:
        - courses
        - v1
      parameters:
        - $ref: '#/components/parameters/header_token'
        - $ref: '#/components/parameters/query_course_id'
        - $ref: '#/components/parameters/query_block_id'
        - $ref: '#/components/parameters/query_approved'
      responses:
        '200':
          $ref: '#/components/responses/AcceptUpdate'
        '400':
          $ref: '#/components/responses/CourseInsertion'
        '401':
          $ref: '#/components/responses/MissingToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/growth_areas:
    get:
      description: List of growth areas
      summary: List of growth areas
      tags:
        - courses
        - v1
      responses:
        '200':
          description: "Growth areas list"
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  date:
                    type: string
                    format: date
                    description: "Date of the current call to the API"
                  data:
                    type: object
                    $ref: '#/components/schemas/growth_area_data'
                    description: "Data return from the api"
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Resource not found"
    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              username:
                type: boolean
              password:
                type: boolean
              message:
                type: string
          example:
            success: false
            username: true
            password: false
            description: "Authentication failed. Wrong password."
    BadInputs:
      description: Bad Input
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Bad input. Missing required information"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "The student is already inscribe to this project class"
    AcceptInsert:
      description: Insert record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "accepted"
            description: "Inserted 1 rows"
    AcceptDelete:
      description: Delete record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "deleted"
            description: "Deleted 1 rows"
    AcceptUpdate:
      description: Update record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
              confirmation_date:
                type: string
                format: date
                description: "Confirmation date for course approval"
            example:
              status: "accepted"
              description: "Resources updated successfully"
    Forbidden:
      description: Operation forbided
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
    MissingToken:
      description: Missing authentication token
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
    CourseInsertion:
      description: Missing parameters in course proposal Insertion
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description: 
                type: string
              course_id:
                type: integer
                description: "Course id of the proposal"
              publication:
                type: string
                format: date
                description: "Publication date of course proposal"
              course_exist:
                type: boolean
                description: "Tells if the course_id refers to a previous proposal. If set to true means it only added the project class proposal"
              wrong_ord_class:
                type: boolean
                description: "Tells if some values of the ordinary classes tried to insert were non valid and consequently not inserted"
              wrong_context: 
                type: boolean
                description: "Tells if some values of the contexts tried to insert were non valid and consequently not inserted"
              wrong_teaching: 
                type: boolean
                description: "Tells if some values of the teachings tried to insert were non valid and consequently not inserted"
              wrong_teacher: 
                type: boolean 
                description: "Tells if some values of the teachers tried to insert were non valid and consequently not inserted"
              new_teacher:
                type: boolean
                description: "If result of insertion is a duplicate, tells if there are new teachers the user tried to insert"
  schemas:
    learning_block_data:
      type: object
      properties:
        id:
          type: integer
          description: "Id of the learning block"
        number:
          type: integer
          description: "Number of the learning block inside a certain school year"
        school_year:
          type: integer
          description: "School year in which the learning block takes place"
        start:
          type: string
          format: date
          description: "Starting date of the learning block"
        end:
          type: string
          format: date
          description: "Ending date of the learning block"
    learning_area_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the learning area"
        italian_title:
          type: string
          description: "Italian title of the learning area"
        english_title:
          type: string
          description: "English title of the learning area"
        italian_description:
          type: string
          description: "Italian description of the learning area"
        english_description:
          type: string
          description: "English description of the learning area"
        credits:
          type: boolean
          description: "Number of credits for that specific learning area in that specific block"
    growth_area_data:
      type: object
      properties:
        id:
          type: string
          description: "Id of the growth area"
        italian_title:
          type: string
          description: "Italian title of the growth area"
        english_title:
          type: string
          description: "English title of the growth area"
        italian_description:
          type: string
          description: "Italian description of the growth area"
        english_description:
          type: string
          description: "English description of the growth area"
    learning_area_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the learning area associated to the course"
    course_data_short:
      type: object
      properties:
        id:
          type: string
          description: "Id of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        credits:
          type: integer
          description: "Credits that the course provides"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        group:
          type: integer
          description: "Specifies in which group a certain course belongs. If two courses have the same group, they are concurrent. (Only for v2)"
        pending:
          type: boolean
          description: "Is the student already inscribed to this course? Or is he waiting for a response?"
        section:
          type: string
          description: "Section of the project class in case the student is inscribed to it"
    proposer_teacher_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the teacher that proposed the course"
    certifying_admin_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the admin that certified the course"
    course_data_complete:
      type: object
      properties:
        id:
          type: string
          description: "Id of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        creation_school_year:
          type: integer
          description: "Creation school year of the course"
        italian_description:
          type: string
          description: "Italian description of the course"
        english_description:
          type: string
          description: "English description of the course"
        up_hours:
          type: integer
          description: "Number of hours of the course the students will follow from home"
        credits:
          type: integer
          description: "Credits that the course provides"
        italian_expected_learning_results:
          type: string
          description: "Italian expected learning results for the students that attend the course"
        english_expected_learning_results:
          type: string
          description: "English expected learning results for the students that attend the course"
        italian_criterions:
          type: string
          description: "Italian criterions for evaluate the knowledge of the students"
        english_criterions:
          type: string
          description: "English criterions for evaluate the knowledge of the students"
        italian_activities:
          type: string
          description: "Italian activities that will be carried out during the course"
        english_activities:
          type: string
          description: "English activities that will be carried out during the course"
        italian_learning_area:
          type: string
          description: "Italian name of the learning area associated with the course"
        english_learning_area:
          type: string
          description: "English name of the learning area associated with the course"
        italian_growth_area:
          type: string
          description: "Italian name of the growth area associated with the course"
        english_growth_area:
          type: string
          description: "English name of the growth area associated with the course"
        min_students:
          type: integer
          description: "Minimum number of students required in order to start the course"
        max_students:
          type: integer
          description: "Maximum number of students expected to partake in a course to have an ideal class"
        proposer_teacher_ref:
          $ref: '#/components/schemas/proposer_teacher_ref'
          description: "Reference to the teacher that proposed the course"
        teacher_name:
          type: string
          description: "Name of the teacher that proposed the course"
        teacher_surname:
          type: string
          description: "Surname of the teacher that proposed the course"
        certifying_admin_ref:
          $ref: '#/components/schemas/proposer_teacher_ref'
          description: "References to the admin that certifies the course"
        admin_name:
          type: string
          description: "Name of the admin that approved the course"
        admin_surname:
          type: string
          description: "Surname of the admin that approved the course"
        admin_confirmation:
          type: string
          format: date
          description: "Date of the approval of the admin for that course"
    course_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Course id of the proposition"
    course_model_data:
      type: object
      properties:
        course_ref:
          $ref: '#/components/schemas/course_ref'
          description: "References to the course the model refers to"
        italian_title:
          type: string
          description: "Italian title of the course model"
        english_title:
          type: string
          description: "English title of the course model"
        creation_school_year:
          type: integer
          description: "Creation school year of the course model"
        project_class_confirmation_date: 
          type: string
          format: date
          description: "Confirmation date of the project class"
        project_class_to_be_modified:
          type: boolean
          description: "Is at true if the project class has to be modified"
        course_confirmation_date:
          type: string
          format: date
          description: "Confirmation date of the course"
        course_to_be_modified:
          type: boolean
          description: "Is at true if the course has to be modified"
    annual_credits_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            study_year:
              type: integer
              description: "Study year which the credit model refers"
            study_address:
              type: string
              description: "Study address which the credit model refers"
            definition_year:
              type: integer
              description: "Year of the definition of the credit model"
    ordinary_class_data:
      type: object
      properties:
            study_year_ref:
              $ref: '#/components/schemas/study_year_ref'
              description: "References to the study year of the ordinary class"
            study_address_ref:
              $ref: '#/components/schemas/study_address_ref'
              description: "References to the study address of the ordinary class"
            school_year:
              type: integer
              description: "School year in which the class what defined"
            italian_displayed_name:
              type: string
              description: "Italian name of the class displayed"
            english_displayed_name:
              type: string
              description: "English name of the class displayed"
            annual_credits_ref:
              $ref: '#/components/schemas/annual_credits_ref'
              description: "References to the credit model used for that class"
    study_year_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the study year"
    study_address_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the study address"
    learining_context_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: string
              description: "Id of the learning context"
    ordinary_classes_course_data:
      type: object
      properties:
        study_year_ref:
          $ref: '#/components/schemas/study_year_ref'
          description: "References to the study year of the ordinary class"
        study_address_ref:
          $ref: '#/components/schemas/study_address_ref'
          description: "References to the study address of the ordinary class"
        italian_title:
          type: string
          description: "Italian title of the ordinary class"
        english_title:
          type: string
          description: "English title of the ordinary class"
        presidium:
          type: boolean
          description: "Specifies if the address of the class is the one for which the course was created for"
        main_study_year:
          type: boolean
          description: "Specifies if the study year of the class is the one for which the course was created for"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Reference to the learning context which the course is open to the ordinary classes"
    teaching_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the teaching"
    teaching_data:
      type: object
      properties:
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
        italian_title:
          type: string
          description: "Italian title of the teaching"
        english_title:
          type: string
          description: "English title of the teaching"
    learning_context_ref:
      type: object
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        data:
          type: object
          properties:
            id:
              type: integer
              description: "Id of the learning context"
    learning_context_data:
      type: object
      properties:
        id:
          type: string
          description: "Learning context id"
        italian_title:
          type: string
          description: "Italian title of the learning context"
        english_title:
          type: string
          description: "English title of the learning context"
        italian_description:
          type: string
          description: "Italian description of the learning context"
        english_description:
          type: string
          description: "English description of the learning context"
        credits:
          type: integer
          description: "Returns the total amount of credits the student needs to have for that specific learning context in case there is not learning areas constraints. If those constraints exist, its value will be null"
    student_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    teacher_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    admin_auth: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    authentication_res:
      type: object
      properties:
        success:
          type: boolean
          description: "Success of the authentication"
          example: true
        message:
          type: string
          description: "Message about the result of the authentication"
          example: "Authentication OK"
        user:
          type: string
          description: "Type of user who logged in"
          example: "student"
        token:
          type: string
          description: "Authentication token"
        username:
          type: string
          description: "User's username"
        id:
          type: string
          description: "ID of the user who has logged in"
    curriculum_data:
      type: object
      properties:
        id:
          type: integer
          description: "Identifier of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        section:
          type: string 
          description: "Section of the project class the student is currently enrolled in"
        credits:
          type: integer
          description: "Number of credits that a course give to a student"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        learning_context_ref:
          $ref: '#/components/schemas/learning_context_ref'
          description: "Reference to the learning context associated to my subscription to the course"
        final_grade:
          type: integer
          description: "Final grade of a certain course. It could be not present if the course is not over yet or has to start."
    curriculum_data_v2:
      type: object
      properties:
        id:
          type: integer
          description: "Identifier of the course"
        italian_title:
          type: string
          description: "Italian title of the course"
        english_title:
          type: string
          description: "English title of the course"
        section:
          type: string 
          description: "Section of the project class the student is currently enrolled in"
        credits:
          type: integer
          description: "Number of credits that a course give to a student"
        learning_area_ref:
          $ref: '#/components/schemas/learning_area_ref'
          description: "Reference to the learning area associated to the course"
        learning_context_ref:
          $ref: '#/components/schemas/learining_context_ref'
          description: "Reference to the learning context associated to my subscription to the course"
        final_grade:
          type: integer
          description: "Final grade of a certain course. It could be not present if the course is not over yet or has to start."
        future_course:
          type: boolean
          description: "Tells if the course that is displaying in the curriculum is a course that will be hold in the imminent or a future learning block"
    grade_data:
      type: object
      properties:
        italian_description:
          type: string
          description: "Italian description of a grade"
        english_description:
          type: string
          description: "English description of a grade"
        publication:
          type: string
          format: date
          description: "Date of the publication of the grade"
        grade:
          type: integer
          description: "Grade of the student"
        final:
          type: boolean
          description: "Tells the user if the grade is the final one or not"
    my_project_class_data:
      type: object
      properties:
        id:
          type: integer
          description: "Course id"
        italian_title:
          type: string
          description: "Italian description of a course"
        english_title:
          type: string
          description: "English description of a course"
        section:
          type: string 
          description: "Section of project class"
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
        my_teaching:
          type: boolean
          description: "Tells if the teaching in teaching_ref is the personal teaching of the teacher"
    associated_project_class_data:
      type: object
      properties:
        id:
          type: integer
          description: "Course id"
        italian_title:
          type: string
          description: "Italian description of a course"
        english_title:
          type: string
          description: "English description of a course"
        teaching_ref:
          $ref: '#/components/schemas/teaching_ref'
          description: "References to the teaching of the course"
    my_ordinary_class_data:
      type: object
      properties:
        study_year:
          type: integer
          description: "Class study year"
        address:
          type: string
          description: "Class address"
        school_year:
          type: string
          description: "Class school year"
        section:
          type: string 
          description: "Section of ordinary class"
    project_class_component_data:
      type: object
      properties:
        id:
          type: integer
          description: Student Id
        name:
          type: string
          description: Name of the student
        surname:
          type: string
          description: Surname of the student
        ord_class_study_year:
          type: integer
          description: Study year of the ordinary class of the student
        ord_class_address:
          type: string
          description: Address of the ordinary class the student attend during the project class period
        ord_class_section:
          type: string
          description: Section of the ordinary class the student attend during the project class period
    ordinary_class_component_data:
      type: object
      properties:
        id:
          type: integer
          description: Student Id
        name:
          type: string
          description: Name of the student
        surname:
          type: string
          description: Surname of the student
    learning_blocks_courses_data:
      type: object
      properties:
        course_id:
          type: integer
          description: Course Id
        block_id:
          type: integer
          description: Block Id where a student has taken that course
    learning_contexts_courses_data:
      type: object
      properties:
        course_id:
          type: integer
          description: Course Id
        context_id:
          type: integer
          description: context Id of the course the student can follow
    teacher_active_year_data:
      type: object
      required:
        - "year"
      properties:
        study_year:
          type: integer
          description: "Study year of the ordinary class the teacher was active teaching"
        address:
          type: string
          description: "Address of the ordinary class the teacher was active teaching"
        year:
          type: integer
          description: "Year in with the teacher was active teaching in the school"
    project_class_section_data:
      type: object
      properties:
        section:
          type: string
          description: "Section of the project class in a given learning block"
    student_ordinary_class_data:
      type: object
      properties:
        study_year:
          type: integer
          description: "Ordinary class study year"
        address:
          type: string
          description: "Ordinary class address"
        section:
          type: string
          description: "Ordinary class section"
    student_project_classes_data:
      type: object
      properties:
        italian_title:
          type: string
          description: "Italian title of the project class"
        english_title:
          type: string
          description: "English title of the project class"
        section:
          type: string
          description: "Section of the project class"
    project_classes_announcements_data:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the announcement"
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string
          description: "English title of the announcement"
        publishment:
          type: string
          format: date
          description: "Date of publication of the announcement"
    announcement_data:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the announcement"
        italian_title:
          type: string
          description: "Italian title of the announcement"
        english_title:
          type: string
          description: "English title of the announcement"
        publishment:
          type: string
          format: date
          description: "Date of publication of the announcement"
        italian_message:
          type: string
          description: "Italian message in the announcement"
        english_message:
          type: string
          description: "English message in the announcement"
    proposal_object_insertion:
      type: object
      required:
        - ita_title
        - eng_title
        - ita_descr
        - eng_descr
        - up_hours
        - credits
        - ita_exp_l
        - eng_exp_l
        - ita_cri
        - eng_cri
        - ita_act
        - eng_act
        - area_id
        - growth_id
        - min_students
        - max_students
        - block_id
        - access_object
        - teaching_list
        - class_group
        - teacher_list
      properties:
        course_id:
          type: integer
          description: "Course id of the course. If specified refers to a previous model already confirmed"
        ita_title:
          type: string
          description: "Italian title of the course"
        eng_title:
          type: string
          description: "English title of the course"
        ita_descr:
          type: string
          description: "Italian description of the course"
        eng_descr:
          type: string
          description: "English description of the course"
        up_hours:
          type: integer
          description: "Up hours planned for the course"
        credits:
          type: integer
          description: "Number of credits planned for the course"
        ita_exp_l:
          type: string
          description: "Italian description of the expected learning results of the course"
        eng_exp_l:
          type: string
          description: "English description of the expected learning results of the course"
        ita_cri:
          type: string
          description: "Italian description of the criterions of the course"
        eng_cri:
          type: string
          description: "English description of the criterions of the course"
        ita_act:
          type: string
          description: "Italian description of the learning activities of the course"
        eng_act:
          type: string
          description: "English description of the learning activities of the course"
        area_id:
          type: string
          description: "Id of the learning area which the course belongs"
        growth_id:
          type: integer
          description: "Id of the growth area related to the course"
        min_students:
          type: integer
          description: "Min number of student of the course"
        max_students:
          type: integer
          description: "Max number of student of the course"
        block_id:
          type: integer
          description: "Learning block in which the teacher wants to hold the course"
        access_object:
          type: object
          properties:
            context:
              type: array
              items:
                type: object
                properties:
                  study_year:
                    type: integer
                    description: "Study year of the class the user wants to open the course for a specific learning context"
                  study_address:
                    type: string
                    description: "Study address of the class the user wants to open the course for a specific learning context"
                  main_study_year:
                    type: boolean
                    description: "Is the study year of the class the main one for this course?"
                  presidium:
                    type: boolean
                    description: "Is the study address of the class the main one for this course?"
                description: "List of ordinary classes the user wants to open the course for a specific learning context"
              description: "Refers to the context you want to open the course for some class. The label of the object is the id of the context"
        teaching_list:
          type: array
          items:
            type: string
            description: "Id of the teaching"
        class_group:
          type: integer
          description: "Group of the project class proposed"
        teacher_list:
          type: array
          items:
            type: integer
            description: "Id of the teacher"
  parameters:
    query_school_year:
      name: school_year
      in: query
      description: Specifies the school year of the resource you want to extract
      schema:
        type: integer
    query_block_id:
      name: block_id
      in: query
      description: Specifies the learning block id for the resources you want to extract
      schema:
        type: integer
    query_course_id:
      name: course_id
      in: query
      description: Specifies the course id for the resources you want to extract
      schema:
        type: integer
    query_section:
      name: section
      in: query
      description: Specifies the section of a project class for the resources you want to extract
      schema:
        type: string
    query_alone:
      name: alone
      in: query
      description: Specifies if the courses displayed should be also the ones without a project class
      schema:
        type: boolean
    query_student_id:
      name: student_id
      in: query
      description: Specifies the id of the student (in the future it will be done thanks to the token)
      schema:
        type: integer
    query_area_id:
      name: area_id
      in: query
      description: Specifies the id of the learning area for the resources we want to extract
      schema:
        type: string
    query_all_data:
      name: all_data
      in: query
      description: Specifies whether the user wants to have all the data or only part of them
      schema:
        type: boolean
    query_admin_info:
      name: admin_info
      in: query
      description: Specifies whether the user wants to have all the data regarding the admin confirmation
      schema:
        type: boolean
    query_credits:  
      name: credits
      in: query
      description: Specifies whether the user wants the information about the credits model
      schema:
        type: boolean
    query_descending:
      name: descending
      in: query
      description: Specifies whether data should be ordered in descending order
      schema:
        type: boolean
    query_year_of:
      name: year_of
      in: query
      description: Specifies the id of the learning block which we want to know the year
      schema:
        type: integer
    query_teacher_id:
      name: teacher_id
      in: query
      description: Specifies the id of the teacher
      schema:
        type: integer
    query_associated_class:
      name: assoc_class
      in: query
      description: Specifies if the project class is associated to the teacher through its teaching
      schema:
        type: boolean
    path_block_id:
      name: block_id
      in: path
      description: Id of the learning block specified
      schema:
        type: integer
      required: true
    path_learning_block_id:
      name: block
      in: path
      description: Id of the learning block specified
      schema:
        type: integer
      required: true
    path_area_id:
      name: area_id
      in: path
      description: Id of the learning area specified
      schema:
        type: string
      required: true
    path_learning_area_id:
      name: area
      in: path
      description: Id of the learning area specified
      schema:
        type: string
      required: true
    path_course_id:
      name: course_id
      in: path
      description: Id of the course specified
      schema:
        type: integer
      required: true
    path_course_id_param:
      name: course
      in: path
      description: Id of the course specified
      schema:
        type: integer
      required: true
    path_student_id:
      name: student_id
      in: path
      description: Id of the student specified
      schema:
        type: integer
      required: true
    path_student_id_param:
      name: student
      in: path
      description: Id of the student specified
      schema:
        type: integer
      required: true
    path_teacher_id:
      name: teacher_id
      in: path
      description: Id of the teacher specified
      schema:
        type: integer
      required: true
    path_teacher_id_param:
      name: teacher
      in: path
      description: Id of the teacher specified
      schema:
        type: integer
      required: true
    header_token:
      name: x-access-token
      in: header
      description: Token of authenticated user
      schema:
        type: string
      required: true
    query_ita_descr:
      name: ita_description
      in: query
      description: Italian description of the resource we want to search/add
      schema:
        type: string
    query_eng_descr:
      name: eng_description
      in: query
      description: English description of the resource we want to search/add
      schema:
        type: string
    query_grade:
      name: grade
      in: query
      description: Grade the user want to add
      schema:
        type: integer
    query_final:
      name: final
      in: query
      description: Specifies if the grade the user want to add is a final grade
      schema:
        type: string
    path_study_year:
      name: study_year
      in: path
      description: Study year of an ordinary class
      schema:
        type: integer
      required: true
    path_address:
      name: address
      in: path
      description: Address of an ordinary class
      schema:
        type: string
      required: true
    query_full_class:
      name: full_class
      in: query
      description: Specifies if we want information about the classes
      schema:
        type: boolean
    path_announcement_id:
      name: announcement_id
      in: path
      description: Id of an announcement
      schema:
        type: integer
      required: true
    query_context_id:
      name: context_id
      in: query
      description: Id of the learning context
      schema:
        type: integer
    query_recent_models:
      name: recent_models
      in: query
      description: Tells how many models the user wants to see in the most recent confirmed courses proposals
      schema:
        type: integer
    query_not_confirmed:
      name: not_confirmed
      in: query
      description: Tells if the user wants to see only the non confirmed courses proposals
      schema:
        type: boolean
    query_approved:
      name: approved
      in: query
      description: Tells if the course was confirmed or rejected
      schema:
        type: boolean