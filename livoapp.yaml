openapi: 3.0.0
info:
  version: '2.0.0'
  title: "LivoAPP API"
  description: API for managing school curriculum
servers:
  - url: http://localhost:5000/api/v1
    description: Server to use the web service locally
paths:
  /learning_blocks:
    get:
      description: Get all the learning blocks in the system.
      parameters:
        - $ref: '#/components/parameters/School_year'
      summary: View of all the learning blocks.
      responses:
        '200':
          description: "Collection of learning blocks."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/learning_blocks'
  /learning_blocks/{id}:
    get:
      description: Get specific learning block from its ID.
      parameters:
        - $ref: '#/components/parameters/School_year'
      summary: View a specific learning block.
      responses:
        '200':
          description: "View of a single learning block."
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/learning_blocks'
        '404':
          $ref: '#/components/responses/NotFound'
  /learning_areas:
    get:
      description: Get all learning areas in the system.
      parameters:
        - $ref: '#/components/parameters/Block_id'
        - $ref: '#/components/parameters/All_data'
        - $ref: '#/components/parameters/Credits'
      summary: View of all the learning areas.
      responses:
        '200':
          description: "Collection of learning areas"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/learning_areas'
  /learning_areas/{id}:
    get:
      description: Get specific learning area from its id.
      summary: View a specific learning area
      responses:
        '200':
          description: "View of a single learning area"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/learning_areas'
        '404':
          $ref: '#/components/responses/NotFound'
  /courses:
    get:
      description: Get all the courses in the system, with basic information and the eventual name provided for their project classes
      parameters:
        - $ref: '#/components/parameters/Block_id'
        - $ref: '#/components/parameters/Student_id'
        - $ref: '#/components/parameters/Area_id'
        - $ref: '#/components/parameters/Alone'
      summary: View of all the courses
      responses:
        '200':
          description: "Collection of courses"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/courses'
        '404':
          $ref: '#/components/responses/NotFound'
  /courses/{id}:
    get:
      description: Get a specific course from its id.
      parameters:
        - $ref: '#/components/parameters/Admin_info'
      summary: View of a single course
      responses:
        '200':
          description: "View of a single course"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/course'
        '404':
          $ref: '#/components/responses/NotFound'
  /courses/{id}/opento:
    get:
      description: Get all the classes that can see the course
      summary: Collection of classes for which the course can be seen
      responses:
        '200':
          description: "Collection of ordinary classes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ordinary_classes_course'
        '404':
          $ref: '#/components/responses/NotFound'
  /courses/{id}/teachings:
    get:
      description: Get all the teachings that are teach in the course
      summary: Collection of teaching of the course
      responses:
        '200':
          description: "Collection of teachings"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/teachings'
        '404':
          $ref: '#/components/responses/NotFound'
  /courses/{id}/learning_contexts:
    get:
      description: Get all the learning contexts that are associated to the course
      summary: Collection of learning contexts related to the course
      responses:
        '200':
          description: "Collection of contexts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/learning_contexts'
        '404':
          $ref: '#/components/responses/NotFound'
  /ordinary_classes:
    get:
      description: Get all the ordinary classes in the system.
      parameters:
        - $ref: '#/components/parameters/Student_id'
        - $ref: '#/components/parameters/School_year'
        - $ref: '#/components/parameters/Credits'
        - $ref: '#/components/parameters/Descending'
      summary: Collection of ordinary classes
      responses:
        '200':
          description: "Collection of ordinary classes "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ordinary_classes'
        '404':
          $ref: '#/components/responses/NotFound'
  /auth/student_login:
    post:
      description: Authentication for student
      summary: Student login
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/teacher_login:
    post:
      description: Authentication for teacher
      summary: Teacher login
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/teacher'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/admin_login:
    post:
      description: Authentication for admin
      summary: Admin login
      requestBody:
         content:
          application/json:
            schema:
              $ref: '#/components/schemas/admin'
      responses:
        '200':
          description: "Authentication completed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication_res'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/google:
    get:
      description: Google authentication. It will redirect to the google authentication page.
      summary: Google authentication
      responses:
        '200':
          description: Redirect to Google authentication page.
        '401':
          $ref: '#/components/responses/Unauthorized'
  /student/:id/inscribe:
    post:
      description: Subscription to a project class by a student
      summary: Subscription to a course
      parameters:
        - $ref: '#/components/parameters/Course_id'
        - $ref: '#/components/parameters/Block_id'
        - $ref: '#/components/parameters/Section'
      responses:
        '201':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /student/:id/unscribe:
    post:
      description: Delete of a subscription to a project class by a student
      summary: Delete a subscription to a course
      parameters:
        - $ref: '#/components/parameters/Course_id'
        - $ref: '#/components/parameters/Block_id'
      responses:
        '200':
          $ref: '#/components/responses/AcceptInsert'
        '400':
          $ref: '#/components/responses/BadInputs'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Resource not found"
    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              username:
                type: boolean
              password:
                type: boolean
              message:
                type: string
          example:
            success: false
            username: true
            password: false
            description: "Authentication failed. Wrong password."
    BadInputs:
      description: Bad Input
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "Bad input. Missing required information"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "error"
            description: "The student is already inscribe to this project class"
    AcceptInsert:
      description: Insert record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "accepted"
            description: "Inserted 1 rows"
    AcceptDelete:
      description: Delete record into the database
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
          example:
            status: "deleted"
            description: "Deleted 1 rows"
    Forbidden:
      description: Denied access to resource. Need to be logged in.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              description:
                type: string
  schemas:
    learning_blocks:
      type: object
      required:
        - number
        - school_year
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: "Id of the learning block"
              number:
                type: integer
                description: "Number of the learning block inside a certain school year"
              school_year:
                type: integer
                description: "School year in which the learning block takes place"
              start:
                type: string
                format: date
                description: "Starting date of the learning block"
              end:
                type: string
                format: date
                description: "Ending date of the learning block"
    learning_areas:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: "Id of the learning area"
              italian_title:
                type: string
                description: "Italian title of the learning area"
              english_title:
                type: string
                description: "English title of the learning area"
              italian_description:
                type: string
                description: "Italian description of the learning area"
              english_description:
                type: string
                description: "English description of the learning area"
              credits:
                type: boolean
                description: "Number of credits for that specific learning area in that specific block"
    courses:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: "Id of the course"
              italian_title:
                type: string
                description: "Italian title of the course"
              english_title:
                type: string
                description: "English title of the course"
              credits:
                type: integer
                description: "Credits that the course provides"
              italian_displayed_name:
                type: string
                description: "Italian displayed name of the project class associated"
              english_displayed_name:
                type: string
                description: "English displayed name of the project class associated"
              learning_area_ref:
                type: object
                properties:
                  path:
                    type: string
                    description: "Link of the API that returns this data"
                  single:
                    type: boolean
                    description: "Tells if the data are referring to the API in origin or not"
                  query:
                    type: object
                    description: "List of eventual parameters for the API"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: "Id of the learning area associated to the course"
                description: "Reference to the learning area associated to the course"
              pending:
                type: boolean
                description: "Is the student already inscribed to this course? Or is he waiting for a response?"
    course:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: object
          properties:
            id:
              type: string
              description: "Id of the course"
            italian_title:
              type: string
              description: "Italian title of the course"
            english_title:
              type: string
              description: "English title of the course"
            creation_date:
              type: string
              format: date
              description: "Creation date of the course"
            italian_description:
              type: string
              description: "Italian description of the course"
            english_description:
              type: string
              description: "English description of the course"
            up_hours:
              type: integer
              description: "Number of hours of the course the students will follow from home"
            credits:
              type: integer
              description: "Credits that the course provides"
            italian_expected_learning_results:
              type: string
              description: "Italian expected learning results for the students that attend the course"
            english_expected_learning_results:
              type: string
              description: "English expected learning results for the students that attend the course"
            italian_criterions:
              type: string
              description: "Italian criterions for evaluate the knowledge of the students"
            english_criterions:
              type: string
              description: "English criterions for evaluate the knowledge of the students"
            italian_activities:
              type: string
              description: "Italian activities that will be carried out during the course"
            english_activities:
              type: string
              description: "English activities that will be carried out during the course"
            italian_learning_area:
              type: string
              description: "Italian name of the learning area associated with the course"
            english_learning_area:
              type: string
              description: "English name of the learning area associated with the course"
            italian_growth_area:
              type: string
              description: "Italian name of the growth area associated with the course"
            english_growth_area:
              type: string
              description: "English name of the growth area associated with the course"
            min_students:
              type: integer
              description: "Minimum number of students required in order to start the course"
            max_students:
              type: integer
              description: "Maximum number of students expected to partake in a course to have an ideal class"
            proposer_teacher_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the teacher that proposed the course"
              description: "Reference to the teacher that proposed the course"
            teacher_name:
              type: string
              description: "Name of the teacher that proposed the course"
            teacher_surname:
              type: string
              description: "Surname of the teacher that proposed the course"
            certifying_admin_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the admin that certified the course"
              description: "References to the admin that certifies the course"
            admin_name:
              type: string
              description: "Name of the admin that approved the course"
            admin_surname:
              type: string
              description: "Surname of the admin that approved the course"
            admin_confirmation:
              type: string
              format: date
              description: "Date of the approval of the admin for that course"
    ordinary_classes:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: object
          properties:
            study_year_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the study year"
              description: "References to the study year of the ordinary class"
            study_address_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the study address"
              description: "References to the study address of the ordinary class"
            school_year:
              type: integer
              description: "School year in which the class what defined"
            italian_displayed_name:
              type: string
              description: "Italian name of the class displayed"
            english_displayed_name:
              type: string
              description: "English name of the class displayed"
            annual_credits_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    study_year:
                      type: integer
                      description: "Study year which the credit model refers"
                    study_address:
                      type: string
                      description: "Study address which the credit model refers"
                    definition_year:
                      type: integer
                      description: "Year of the definition of the credit model"
              description: "References to the credit model used for that class"
    ordinary_classes_course:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: object
          properties:
            study_year_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the study year"
              description: "References to the study year of the ordinary class"
            study_address_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the study address"
              description: "References to the study address of the ordinary class"
            italian_title:
              type: string
              description: "Italian title of the ordinary class"
            english_title:
              type: string
              description: "English title of the ordinary class"
            presidium:
              type: boolean
              description: "Specifies if the address of the class is the one for which the course was created for"
            main_study_year:
              type: boolean
              description: "Specifies if the study year of the class is the one for which the course was created for"
    teachings:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: object
          properties:
            teaching_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the teaching"
              description: "References to the teaching of the course"
            italian_title:
              type: string
              description: "Italian title of the teaching"
            english_title:
              type: string
              description: "English title of the teaching"
    learning_contexts:
      type: object
      required:
        - italian_title
        - english_title
      properties:
        path:
          type: string
          description: "Link of the API that returns this data"
        single:
          type: boolean
          description: "Tells if the data are referring to the API in origin or not"
        query:
          type: object
          description: "List of eventual parameters for the API"
        date:
          type: string
          format: date
          description: "Date of the current call to the API"
        data:
          type: object
          properties:
            learning_context_ref:
              type: object
              properties:
                path:
                  type: string
                  description: "Link of the API that returns this data"
                single:
                  type: boolean
                  description: "Tells if the data are referring to the API in origin or not"
                query:
                  type: object
                  description: "List of eventual parameters for the API"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Id of the learning context"
              description: "References to the learning context associated to the course"
            italian_title:
              type: string
              description: "Italian title of the learning context associated to the course"
            english_title:
              type: string
              description: "English title of the learning context associated to the course"
    student: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    teacher: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    admin: 
      type: object
      required:
        - "username"
        - "password"
      properties:
        username:
          type: string
          description: "Username of the user that wants to login"
        password:
          type: string
          description: "Password of the user that wants to login"
    authentication_res:
      type: object
      properties:
        success:
          type: boolean
          description: "Success of the authentication"
          example: true
        message:
          type: string
          description: "Message about the result of the authentication"
          example: "Authentication OK"
        user:
          type: string
          description: "Type of user who logged in"
          example: "student"
        token:
          type: string
          description: "Authentication token"
        username:
          type: string
          description: "User's username"
        id:
          type: string
          description: "ID of the user who has logged in"
  parameters:
    School_year:
      name: school_year
      in: query
      description: Specifies the school year of the resource you want to extract
      schema:
        type: integer
    Block_id:
      name: block_id
      in: query
      description: Specifies the learning block id for the resources you want to extract
      schema:
        type: integer
    Course_id:
      name: course_id
      in: query
      description: Specifies the course id for the resources you want to extract
      schema:
        type: integer
    Section:
      name: section
      in: query
      description: Specifies the section of a project class for the resources you want to extract
      schema:
        type: string
    Alone:
      name: alone
      in: query
      description: Specifies if the courses displayed should be also the ones without a project class
      schema:
        type: boolean
    Student_id:
      name: student_id
      in: query
      description: Specifies the id of the student (in the future it will be done thanks to the token)
      schema:
        type: integer
    Area_id:
      name: area_id
      in: query
      description: Specifies the id of the learning area for the resources we want to extract
      schema:
        type: string
    All_data:
      name: all_data
      in: query
      description: Specifies whether the user wants to have all the data or only part of them
      schema:
        type: boolean
    Admin_info:
      name: admin_info
      in: query
      description: Specifies whether the user wants to have all the data regarding the admin confirmation
      schema:
        type: boolean
    Credits:  
      name: credits
      in: query
      description: Specifies whether the user wants the information about the credits model
      schema:
        type: boolean
    Descending:
      name: descending
      in: query
      description: Specifies whether data should be ordered in descending order
      schema:
        type: boolean
